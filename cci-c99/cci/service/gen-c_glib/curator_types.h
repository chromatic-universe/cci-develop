/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef CURATOR_TYPES_H
#define CURATOR_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>

/* custom thrift includes */

/* begin types */

enum _PathChildrenCacheStartMode {
  PATH_CHILDREN_CACHE_START_MODE_NORMAL = 0,
  PATH_CHILDREN_CACHE_START_MODE_BUILD_INITIAL_CACHE = 1,
  PATH_CHILDREN_CACHE_START_MODE_POST_INITIALIZED_EVENT = 2
};
typedef enum _PathChildrenCacheStartMode PathChildrenCacheStartMode;

/* return the name of the constant */
const char *
toString_PathChildrenCacheStartMode(int value); 

enum _CreateMode {
  CREATE_MODE_PERSISTENT = 0,
  CREATE_MODE_PERSISTENT_SEQUENTIAL = 1,
  CREATE_MODE_EPHEMERAL = 2,
  CREATE_MODE_EPHEMERAL_SEQUENTIAL = 3,
  CREATE_MODE_CONTAINER = 4
};
typedef enum _CreateMode CreateMode;

/* return the name of the constant */
const char *
toString_CreateMode(int value); 

enum _CuratorEventType {
  CURATOR_EVENT_TYPE_PING = 0,
  CURATOR_EVENT_TYPE_CREATE = 1,
  CURATOR_EVENT_TYPE_DELETE = 2,
  CURATOR_EVENT_TYPE_EXISTS = 3,
  CURATOR_EVENT_TYPE_GET_DATA = 4,
  CURATOR_EVENT_TYPE_SET_DATA = 5,
  CURATOR_EVENT_TYPE_CHILDREN = 6,
  CURATOR_EVENT_TYPE_SYNC = 7,
  CURATOR_EVENT_TYPE_GET_ACL = 8,
  CURATOR_EVENT_TYPE_SET_ACL = 9,
  CURATOR_EVENT_TYPE_WATCHED = 10,
  CURATOR_EVENT_TYPE_CLOSING = 11,
  CURATOR_EVENT_TYPE_CONNECTION_CONNECTED = 12,
  CURATOR_EVENT_TYPE_CONNECTION_SUSPENDED = 13,
  CURATOR_EVENT_TYPE_CONNECTION_RECONNECTED = 14,
  CURATOR_EVENT_TYPE_CONNECTION_LOST = 15,
  CURATOR_EVENT_TYPE_CONNECTION_READ_ONLY = 16,
  CURATOR_EVENT_TYPE_LEADER = 17,
  CURATOR_EVENT_TYPE_PATH_CHILDREN_CACHE = 18,
  CURATOR_EVENT_TYPE_NODE_CACHE = 19
};
typedef enum _CuratorEventType CuratorEventType;

/* return the name of the constant */
const char *
toString_CuratorEventType(int value); 

enum _EventType {
  EVENT_TYPE_None = 0,
  EVENT_TYPE_NodeCreated = 1,
  EVENT_TYPE_NodeDeleted = 2,
  EVENT_TYPE_NodeDataChanged = 3,
  EVENT_TYPE_NodeChildrenChanged = 4
};
typedef enum _EventType EventType;

/* return the name of the constant */
const char *
toString_EventType(int value); 

enum _KeeperState {
  KEEPER_STATE_Unknown = 0,
  KEEPER_STATE_Disconnected = 1,
  KEEPER_STATE_NoSyncConnected = 2,
  KEEPER_STATE_SyncConnected = 3,
  KEEPER_STATE_AuthFailed = 4,
  KEEPER_STATE_ConnectedReadOnly = 5,
  KEEPER_STATE_SaslAuthenticated = 6,
  KEEPER_STATE_Expired = 7
};
typedef enum _KeeperState KeeperState;

/* return the name of the constant */
const char *
toString_KeeperState(int value); 

enum _PathChildrenCacheEventType {
  PATH_CHILDREN_CACHE_EVENT_TYPE_CHILD_ADDED = 0,
  PATH_CHILDREN_CACHE_EVENT_TYPE_CHILD_UPDATED = 1,
  PATH_CHILDREN_CACHE_EVENT_TYPE_CHILD_REMOVED = 2,
  PATH_CHILDREN_CACHE_EVENT_TYPE_CONNECTION_SUSPENDED = 3,
  PATH_CHILDREN_CACHE_EVENT_TYPE_CONNECTION_RECONNECTED = 4,
  PATH_CHILDREN_CACHE_EVENT_TYPE_CONNECTION_LOST = 5,
  PATH_CHILDREN_CACHE_EVENT_TYPE_INITIALIZED = 6
};
typedef enum _PathChildrenCacheEventType PathChildrenCacheEventType;

/* return the name of the constant */
const char *
toString_PathChildrenCacheEventType(int value); 

enum _PersistentEphemeralNodeMode {
  PERSISTENT_EPHEMERAL_NODE_MODE_EPHEMERAL = 0,
  PERSISTENT_EPHEMERAL_NODE_MODE_EPHEMERAL_SEQUENTIAL = 1,
  PERSISTENT_EPHEMERAL_NODE_MODE_PROTECTED_EPHEMERAL = 2,
  PERSISTENT_EPHEMERAL_NODE_MODE_PROTECTED_EPHEMERAL_SEQUENTIAL = 3
};
typedef enum _PersistentEphemeralNodeMode PersistentEphemeralNodeMode;

/* return the name of the constant */
const char *
toString_PersistentEphemeralNodeMode(int value); 

enum _ExceptionType {
  EXCEPTION_TYPE_GENERAL = 0,
  EXCEPTION_TYPE_ZOOKEEPER = 1,
  EXCEPTION_TYPE_NODE = 2
};
typedef enum _ExceptionType ExceptionType;

/* return the name of the constant */
const char *
toString_ExceptionType(int value); 

enum _NodeExceptionType {
  NODE_EXCEPTION_TYPE_NONODE = 0,
  NODE_EXCEPTION_TYPE_BADVERSION = 1,
  NODE_EXCEPTION_TYPE_NODEEXISTS = 2,
  NODE_EXCEPTION_TYPE_NOTEMPTY = 3
};
typedef enum _NodeExceptionType NodeExceptionType;

/* return the name of the constant */
const char *
toString_NodeExceptionType(int value); 

enum _ZooKeeperExceptionType {
  ZOO_KEEPER_EXCEPTION_TYPE_SYSTEMERROR = 0,
  ZOO_KEEPER_EXCEPTION_TYPE_RUNTIMEINCONSISTENCY = 1,
  ZOO_KEEPER_EXCEPTION_TYPE_DATAINCONSISTENCY = 2,
  ZOO_KEEPER_EXCEPTION_TYPE_CONNECTIONLOSS = 3,
  ZOO_KEEPER_EXCEPTION_TYPE_MARSHALLINGERROR = 4,
  ZOO_KEEPER_EXCEPTION_TYPE_UNIMPLEMENTED = 5,
  ZOO_KEEPER_EXCEPTION_TYPE_OPERATIONTIMEOUT = 6,
  ZOO_KEEPER_EXCEPTION_TYPE_BADARGUMENTS = 7,
  ZOO_KEEPER_EXCEPTION_TYPE_APIERROR = 8,
  ZOO_KEEPER_EXCEPTION_TYPE_NOAUTH = 9,
  ZOO_KEEPER_EXCEPTION_TYPE_NOCHILDRENFOREPHEMERALS = 10,
  ZOO_KEEPER_EXCEPTION_TYPE_INVALIDACL = 11,
  ZOO_KEEPER_EXCEPTION_TYPE_AUTHFAILED = 12,
  ZOO_KEEPER_EXCEPTION_TYPE_SESSIONEXPIRED = 13,
  ZOO_KEEPER_EXCEPTION_TYPE_INVALIDCALLBACK = 14,
  ZOO_KEEPER_EXCEPTION_TYPE_SESSIONMOVED = 15,
  ZOO_KEEPER_EXCEPTION_TYPE_NOTREADONLY = 16
};
typedef enum _ZooKeeperExceptionType ZooKeeperExceptionType;

/* return the name of the constant */
const char *
toString_ZooKeeperExceptionType(int value); 

enum _DiscoveryInstanceType {
  DISCOVERY_INSTANCE_TYPE_DYNAMIC = 0,
  DISCOVERY_INSTANCE_TYPE_STATIC = 1,
  DISCOVERY_INSTANCE_TYPE_PERMANENT = 2
};
typedef enum _DiscoveryInstanceType DiscoveryInstanceType;

/* return the name of the constant */
const char *
toString_DiscoveryInstanceType(int value); 

enum _ProviderStrategyType {
  PROVIDER_STRATEGY_TYPE_RANDOM = 0,
  PROVIDER_STRATEGY_TYPE_STICKY_RANDOM = 1,
  PROVIDER_STRATEGY_TYPE_STICKY_ROUND_ROBIN = 2,
  PROVIDER_STRATEGY_TYPE_ROUND_ROBIN = 3
};
typedef enum _ProviderStrategyType ProviderStrategyType;

/* return the name of the constant */
const char *
toString_ProviderStrategyType(int value); 

/* struct CuratorProjection */
struct _CuratorProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _CuratorProjection CuratorProjection;

struct _CuratorProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorProjectionClass CuratorProjectionClass;

GType curator_projection_get_type (void);
#define TYPE_CURATOR_PROJECTION (curator_projection_get_type())
#define CURATOR_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_PROJECTION, CuratorProjection))
#define CURATOR_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_PROJECTION, CuratorProjectionClass))
#define IS_CURATOR_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_PROJECTION))
#define IS_CURATOR_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_PROJECTION))
#define CURATOR_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_PROJECTION, CuratorProjectionClass))

/* struct ExistsSpec */
struct _ExistsSpec
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gboolean watched;
  gboolean __isset_watched;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
};
typedef struct _ExistsSpec ExistsSpec;

struct _ExistsSpecClass
{
  ThriftStructClass parent;
};
typedef struct _ExistsSpecClass ExistsSpecClass;

GType exists_spec_get_type (void);
#define TYPE_EXISTS_SPEC (exists_spec_get_type())
#define EXISTS_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_EXISTS_SPEC, ExistsSpec))
#define EXISTS_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_EXISTS_SPEC, ExistsSpecClass))
#define IS_EXISTS_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_EXISTS_SPEC))
#define IS_EXISTS_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_EXISTS_SPEC))
#define EXISTS_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_EXISTS_SPEC, ExistsSpecClass))

/* struct GetChildrenSpec */
struct _GetChildrenSpec
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gboolean watched;
  gboolean __isset_watched;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
};
typedef struct _GetChildrenSpec GetChildrenSpec;

struct _GetChildrenSpecClass
{
  ThriftStructClass parent;
};
typedef struct _GetChildrenSpecClass GetChildrenSpecClass;

GType get_children_spec_get_type (void);
#define TYPE_GET_CHILDREN_SPEC (get_children_spec_get_type())
#define GET_CHILDREN_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_GET_CHILDREN_SPEC, GetChildrenSpec))
#define GET_CHILDREN_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_GET_CHILDREN_SPEC, GetChildrenSpecClass))
#define IS_GET_CHILDREN_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_GET_CHILDREN_SPEC))
#define IS_GET_CHILDREN_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_GET_CHILDREN_SPEC))
#define GET_CHILDREN_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_GET_CHILDREN_SPEC, GetChildrenSpecClass))

/* struct GetDataSpec */
struct _GetDataSpec
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gboolean watched;
  gboolean __isset_watched;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
  gboolean decompressed;
  gboolean __isset_decompressed;
};
typedef struct _GetDataSpec GetDataSpec;

struct _GetDataSpecClass
{
  ThriftStructClass parent;
};
typedef struct _GetDataSpecClass GetDataSpecClass;

GType get_data_spec_get_type (void);
#define TYPE_GET_DATA_SPEC (get_data_spec_get_type())
#define GET_DATA_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_GET_DATA_SPEC, GetDataSpec))
#define GET_DATA_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_GET_DATA_SPEC, GetDataSpecClass))
#define IS_GET_DATA_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_GET_DATA_SPEC))
#define IS_GET_DATA_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_GET_DATA_SPEC))
#define GET_DATA_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_GET_DATA_SPEC, GetDataSpecClass))

/* struct LeaderEvent */
struct _LeaderEvent
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gchar * participantId;
  gboolean __isset_participantId;
  gboolean isLeader;
  gboolean __isset_isLeader;
};
typedef struct _LeaderEvent LeaderEvent;

struct _LeaderEventClass
{
  ThriftStructClass parent;
};
typedef struct _LeaderEventClass LeaderEventClass;

GType leader_event_get_type (void);
#define TYPE_LEADER_EVENT (leader_event_get_type())
#define LEADER_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LEADER_EVENT, LeaderEvent))
#define LEADER_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_LEADER_EVENT, LeaderEventClass))
#define IS_LEADER_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LEADER_EVENT))
#define IS_LEADER_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_LEADER_EVENT))
#define LEADER_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LEADER_EVENT, LeaderEventClass))

/* struct LeaderProjection */
struct _LeaderProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _LeaderProjection LeaderProjection;

struct _LeaderProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _LeaderProjectionClass LeaderProjectionClass;

GType leader_projection_get_type (void);
#define TYPE_LEADER_PROJECTION (leader_projection_get_type())
#define LEADER_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LEADER_PROJECTION, LeaderProjection))
#define LEADER_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_LEADER_PROJECTION, LeaderProjectionClass))
#define IS_LEADER_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LEADER_PROJECTION))
#define IS_LEADER_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_LEADER_PROJECTION))
#define LEADER_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LEADER_PROJECTION, LeaderProjectionClass))

/* struct LeaderResult */
struct _LeaderResult
{ 
  ThriftStruct parent; 

  /* public */
  LeaderProjection * projection;
  gboolean __isset_projection;
  gboolean isLeader;
  gboolean __isset_isLeader;
};
typedef struct _LeaderResult LeaderResult;

struct _LeaderResultClass
{
  ThriftStructClass parent;
};
typedef struct _LeaderResultClass LeaderResultClass;

GType leader_result_get_type (void);
#define TYPE_LEADER_RESULT (leader_result_get_type())
#define LEADER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LEADER_RESULT, LeaderResult))
#define LEADER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_LEADER_RESULT, LeaderResultClass))
#define IS_LEADER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LEADER_RESULT))
#define IS_LEADER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_LEADER_RESULT))
#define LEADER_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LEADER_RESULT, LeaderResultClass))

/* struct LeaseProjection */
struct _LeaseProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _LeaseProjection LeaseProjection;

struct _LeaseProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _LeaseProjectionClass LeaseProjectionClass;

GType lease_projection_get_type (void);
#define TYPE_LEASE_PROJECTION (lease_projection_get_type())
#define LEASE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LEASE_PROJECTION, LeaseProjection))
#define LEASE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_LEASE_PROJECTION, LeaseProjectionClass))
#define IS_LEASE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LEASE_PROJECTION))
#define IS_LEASE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_LEASE_PROJECTION))
#define LEASE_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LEASE_PROJECTION, LeaseProjectionClass))

/* struct LockProjection */
struct _LockProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _LockProjection LockProjection;

struct _LockProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _LockProjectionClass LockProjectionClass;

GType lock_projection_get_type (void);
#define TYPE_LOCK_PROJECTION (lock_projection_get_type())
#define LOCK_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_LOCK_PROJECTION, LockProjection))
#define LOCK_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_LOCK_PROJECTION, LockProjectionClass))
#define IS_LOCK_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_LOCK_PROJECTION))
#define IS_LOCK_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_LOCK_PROJECTION))
#define LOCK_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_LOCK_PROJECTION, LockProjectionClass))

/* struct NodeCacheProjection */
struct _NodeCacheProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _NodeCacheProjection NodeCacheProjection;

struct _NodeCacheProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _NodeCacheProjectionClass NodeCacheProjectionClass;

GType node_cache_projection_get_type (void);
#define TYPE_NODE_CACHE_PROJECTION (node_cache_projection_get_type())
#define NODE_CACHE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NODE_CACHE_PROJECTION, NodeCacheProjection))
#define NODE_CACHE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NODE_CACHE_PROJECTION, NodeCacheProjectionClass))
#define IS_NODE_CACHE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NODE_CACHE_PROJECTION))
#define IS_NODE_CACHE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NODE_CACHE_PROJECTION))
#define NODE_CACHE_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NODE_CACHE_PROJECTION, NodeCacheProjectionClass))

/* struct OptionalChildrenList */
struct _OptionalChildrenList
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * children;
  gboolean __isset_children;
};
typedef struct _OptionalChildrenList OptionalChildrenList;

struct _OptionalChildrenListClass
{
  ThriftStructClass parent;
};
typedef struct _OptionalChildrenListClass OptionalChildrenListClass;

GType optional_children_list_get_type (void);
#define TYPE_OPTIONAL_CHILDREN_LIST (optional_children_list_get_type())
#define OPTIONAL_CHILDREN_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OPTIONAL_CHILDREN_LIST, OptionalChildrenList))
#define OPTIONAL_CHILDREN_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_OPTIONAL_CHILDREN_LIST, OptionalChildrenListClass))
#define IS_OPTIONAL_CHILDREN_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OPTIONAL_CHILDREN_LIST))
#define IS_OPTIONAL_CHILDREN_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_OPTIONAL_CHILDREN_LIST))
#define OPTIONAL_CHILDREN_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OPTIONAL_CHILDREN_LIST, OptionalChildrenListClass))

/* struct OptionalData */
struct _OptionalData
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * data;
  gboolean __isset_data;
};
typedef struct _OptionalData OptionalData;

struct _OptionalDataClass
{
  ThriftStructClass parent;
};
typedef struct _OptionalDataClass OptionalDataClass;

GType optional_data_get_type (void);
#define TYPE_OPTIONAL_DATA (optional_data_get_type())
#define OPTIONAL_DATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OPTIONAL_DATA, OptionalData))
#define OPTIONAL_DATA_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_OPTIONAL_DATA, OptionalDataClass))
#define IS_OPTIONAL_DATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OPTIONAL_DATA))
#define IS_OPTIONAL_DATA_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_OPTIONAL_DATA))
#define OPTIONAL_DATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OPTIONAL_DATA, OptionalDataClass))

/* struct OptionalLockProjection */
struct _OptionalLockProjection
{ 
  ThriftStruct parent; 

  /* public */
  LockProjection * lockProjection;
  gboolean __isset_lockProjection;
};
typedef struct _OptionalLockProjection OptionalLockProjection;

struct _OptionalLockProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _OptionalLockProjectionClass OptionalLockProjectionClass;

GType optional_lock_projection_get_type (void);
#define TYPE_OPTIONAL_LOCK_PROJECTION (optional_lock_projection_get_type())
#define OPTIONAL_LOCK_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OPTIONAL_LOCK_PROJECTION, OptionalLockProjection))
#define OPTIONAL_LOCK_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_OPTIONAL_LOCK_PROJECTION, OptionalLockProjectionClass))
#define IS_OPTIONAL_LOCK_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OPTIONAL_LOCK_PROJECTION))
#define IS_OPTIONAL_LOCK_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_OPTIONAL_LOCK_PROJECTION))
#define OPTIONAL_LOCK_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OPTIONAL_LOCK_PROJECTION, OptionalLockProjectionClass))

/* struct OptionalPath */
struct _OptionalPath
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
};
typedef struct _OptionalPath OptionalPath;

struct _OptionalPathClass
{
  ThriftStructClass parent;
};
typedef struct _OptionalPathClass OptionalPathClass;

GType optional_path_get_type (void);
#define TYPE_OPTIONAL_PATH (optional_path_get_type())
#define OPTIONAL_PATH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OPTIONAL_PATH, OptionalPath))
#define OPTIONAL_PATH_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_OPTIONAL_PATH, OptionalPathClass))
#define IS_OPTIONAL_PATH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OPTIONAL_PATH))
#define IS_OPTIONAL_PATH_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_OPTIONAL_PATH))
#define OPTIONAL_PATH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OPTIONAL_PATH, OptionalPathClass))

/* struct PathChildrenCacheProjection */
struct _PathChildrenCacheProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _PathChildrenCacheProjection PathChildrenCacheProjection;

struct _PathChildrenCacheProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _PathChildrenCacheProjectionClass PathChildrenCacheProjectionClass;

GType path_children_cache_projection_get_type (void);
#define TYPE_PATH_CHILDREN_CACHE_PROJECTION (path_children_cache_projection_get_type())
#define PATH_CHILDREN_CACHE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PATH_CHILDREN_CACHE_PROJECTION, PathChildrenCacheProjection))
#define PATH_CHILDREN_CACHE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PATH_CHILDREN_CACHE_PROJECTION, PathChildrenCacheProjectionClass))
#define IS_PATH_CHILDREN_CACHE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PATH_CHILDREN_CACHE_PROJECTION))
#define IS_PATH_CHILDREN_CACHE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PATH_CHILDREN_CACHE_PROJECTION))
#define PATH_CHILDREN_CACHE_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PATH_CHILDREN_CACHE_PROJECTION, PathChildrenCacheProjectionClass))

/* struct PersistentEphemeralNodeProjection */
struct _PersistentEphemeralNodeProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _PersistentEphemeralNodeProjection PersistentEphemeralNodeProjection;

struct _PersistentEphemeralNodeProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _PersistentEphemeralNodeProjectionClass PersistentEphemeralNodeProjectionClass;

GType persistent_ephemeral_node_projection_get_type (void);
#define TYPE_PERSISTENT_EPHEMERAL_NODE_PROJECTION (persistent_ephemeral_node_projection_get_type())
#define PERSISTENT_EPHEMERAL_NODE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PERSISTENT_EPHEMERAL_NODE_PROJECTION, PersistentEphemeralNodeProjection))
#define PERSISTENT_EPHEMERAL_NODE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PERSISTENT_EPHEMERAL_NODE_PROJECTION, PersistentEphemeralNodeProjectionClass))
#define IS_PERSISTENT_EPHEMERAL_NODE_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PERSISTENT_EPHEMERAL_NODE_PROJECTION))
#define IS_PERSISTENT_EPHEMERAL_NODE_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PERSISTENT_EPHEMERAL_NODE_PROJECTION))
#define PERSISTENT_EPHEMERAL_NODE_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PERSISTENT_EPHEMERAL_NODE_PROJECTION, PersistentEphemeralNodeProjectionClass))

/* struct Id */
struct _Id
{ 
  ThriftStruct parent; 

  /* public */
  gchar * scheme;
  gboolean __isset_scheme;
  gchar * id;
  gboolean __isset_id;
};
typedef struct _Id Id;

struct _IdClass
{
  ThriftStructClass parent;
};
typedef struct _IdClass IdClass;

GType id_get_type (void);
#define TYPE_ID (id_get_type())
#define ID(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ID, Id))
#define ID_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_ID, IdClass))
#define IS_ID(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ID))
#define IS_ID_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_ID))
#define ID_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ID, IdClass))

/* struct Participant */
struct _Participant
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
  gboolean isLeader;
  gboolean __isset_isLeader;
};
typedef struct _Participant Participant;

struct _ParticipantClass
{
  ThriftStructClass parent;
};
typedef struct _ParticipantClass ParticipantClass;

GType participant_get_type (void);
#define TYPE_PARTICIPANT (participant_get_type())
#define PARTICIPANT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PARTICIPANT, Participant))
#define PARTICIPANT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PARTICIPANT, ParticipantClass))
#define IS_PARTICIPANT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PARTICIPANT))
#define IS_PARTICIPANT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PARTICIPANT))
#define PARTICIPANT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PARTICIPANT, ParticipantClass))

/* struct Stat */
struct _Stat
{ 
  ThriftStruct parent; 

  /* public */
  gint64 czxid;
  gboolean __isset_czxid;
  gint64 mzxid;
  gboolean __isset_mzxid;
  gint64 ctime;
  gboolean __isset_ctime;
  gint64 mtime;
  gboolean __isset_mtime;
  gint32 version;
  gboolean __isset_version;
  gint32 cversion;
  gboolean __isset_cversion;
  gint32 aversion;
  gboolean __isset_aversion;
  gint64 ephemeralOwner;
  gboolean __isset_ephemeralOwner;
  gint32 dataLength;
  gboolean __isset_dataLength;
  gint32 numChildren;
  gboolean __isset_numChildren;
  gint64 pzxid;
  gboolean __isset_pzxid;
};
typedef struct _Stat Stat;

struct _StatClass
{
  ThriftStructClass parent;
};
typedef struct _StatClass StatClass;

GType stat_get_type (void);
#define TYPE_STAT (stat_get_type())
#define STAT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_STAT, Stat))
#define STAT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_STAT, StatClass))
#define IS_STAT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_STAT))
#define IS_STAT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_STAT))
#define STAT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_STAT, StatClass))

/* struct WatchedEvent */
struct _WatchedEvent
{ 
  ThriftStruct parent; 

  /* public */
  KeeperState keeperState;
  gboolean __isset_keeperState;
  EventType eventType;
  gboolean __isset_eventType;
  gchar * path;
  gboolean __isset_path;
};
typedef struct _WatchedEvent WatchedEvent;

struct _WatchedEventClass
{
  ThriftStructClass parent;
};
typedef struct _WatchedEventClass WatchedEventClass;

GType watched_event_get_type (void);
#define TYPE_WATCHED_EVENT (watched_event_get_type())
#define WATCHED_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_WATCHED_EVENT, WatchedEvent))
#define WATCHED_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_WATCHED_EVENT, WatchedEventClass))
#define IS_WATCHED_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_WATCHED_EVENT))
#define IS_WATCHED_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_WATCHED_EVENT))
#define WATCHED_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_WATCHED_EVENT, WatchedEventClass))

/* struct Version */
struct _Version
{ 
  ThriftStruct parent; 

  /* public */
  gint32 version;
  gboolean __isset_version;
};
typedef struct _Version Version;

struct _VersionClass
{
  ThriftStructClass parent;
};
typedef struct _VersionClass VersionClass;

GType version_get_type (void);
#define TYPE_VERSION (version_get_type())
#define VERSION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_VERSION, Version))
#define VERSION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_VERSION, VersionClass))
#define IS_VERSION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_VERSION))
#define IS_VERSION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_VERSION))
#define VERSION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_VERSION, VersionClass))

/* struct DiscoveryProjection */
struct _DiscoveryProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _DiscoveryProjection DiscoveryProjection;

struct _DiscoveryProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryProjectionClass DiscoveryProjectionClass;

GType discovery_projection_get_type (void);
#define TYPE_DISCOVERY_PROJECTION (discovery_projection_get_type())
#define DISCOVERY_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_PROJECTION, DiscoveryProjection))
#define DISCOVERY_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_PROJECTION, DiscoveryProjectionClass))
#define IS_DISCOVERY_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_PROJECTION))
#define IS_DISCOVERY_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_PROJECTION))
#define DISCOVERY_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_PROJECTION, DiscoveryProjectionClass))

/* struct DiscoveryProviderProjection */
struct _DiscoveryProviderProjection
{ 
  ThriftStruct parent; 

  /* public */
  gchar * id;
  gboolean __isset_id;
};
typedef struct _DiscoveryProviderProjection DiscoveryProviderProjection;

struct _DiscoveryProviderProjectionClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryProviderProjectionClass DiscoveryProviderProjectionClass;

GType discovery_provider_projection_get_type (void);
#define TYPE_DISCOVERY_PROVIDER_PROJECTION (discovery_provider_projection_get_type())
#define DISCOVERY_PROVIDER_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_PROVIDER_PROJECTION, DiscoveryProviderProjection))
#define DISCOVERY_PROVIDER_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_PROVIDER_PROJECTION, DiscoveryProviderProjectionClass))
#define IS_DISCOVERY_PROVIDER_PROJECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_PROVIDER_PROJECTION))
#define IS_DISCOVERY_PROVIDER_PROJECTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_PROVIDER_PROJECTION))
#define DISCOVERY_PROVIDER_PROJECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_PROVIDER_PROJECTION, DiscoveryProviderProjectionClass))

/* struct CreateSpec */
struct _CreateSpec
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  GByteArray * data;
  gboolean __isset_data;
  CreateMode mode;
  gboolean __isset_mode;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
  gboolean compressed;
  gboolean __isset_compressed;
  gboolean creatingParentsIfNeeded;
  gboolean __isset_creatingParentsIfNeeded;
  gboolean withProtection;
  gboolean __isset_withProtection;
  gboolean creatingParentContainersIfNeeded;
  gboolean __isset_creatingParentContainersIfNeeded;
};
typedef struct _CreateSpec CreateSpec;

struct _CreateSpecClass
{
  ThriftStructClass parent;
};
typedef struct _CreateSpecClass CreateSpecClass;

GType create_spec_get_type (void);
#define TYPE_CREATE_SPEC (create_spec_get_type())
#define CREATE_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CREATE_SPEC, CreateSpec))
#define CREATE_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CREATE_SPEC, CreateSpecClass))
#define IS_CREATE_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CREATE_SPEC))
#define IS_CREATE_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CREATE_SPEC))
#define CREATE_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CREATE_SPEC, CreateSpecClass))

/* struct DeleteSpec */
struct _DeleteSpec
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gboolean guaranteed;
  gboolean __isset_guaranteed;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
  Version * version;
  gboolean __isset_version;
};
typedef struct _DeleteSpec DeleteSpec;

struct _DeleteSpecClass
{
  ThriftStructClass parent;
};
typedef struct _DeleteSpecClass DeleteSpecClass;

GType delete_spec_get_type (void);
#define TYPE_DELETE_SPEC (delete_spec_get_type())
#define DELETE_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DELETE_SPEC, DeleteSpec))
#define DELETE_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DELETE_SPEC, DeleteSpecClass))
#define IS_DELETE_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DELETE_SPEC))
#define IS_DELETE_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DELETE_SPEC))
#define DELETE_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DELETE_SPEC, DeleteSpecClass))

/* struct OptionalStat */
struct _OptionalStat
{ 
  ThriftStruct parent; 

  /* public */
  Stat * stat;
  gboolean __isset_stat;
};
typedef struct _OptionalStat OptionalStat;

struct _OptionalStatClass
{
  ThriftStructClass parent;
};
typedef struct _OptionalStatClass OptionalStatClass;

GType optional_stat_get_type (void);
#define TYPE_OPTIONAL_STAT (optional_stat_get_type())
#define OPTIONAL_STAT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OPTIONAL_STAT, OptionalStat))
#define OPTIONAL_STAT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_OPTIONAL_STAT, OptionalStatClass))
#define IS_OPTIONAL_STAT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OPTIONAL_STAT))
#define IS_OPTIONAL_STAT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_OPTIONAL_STAT))
#define OPTIONAL_STAT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OPTIONAL_STAT, OptionalStatClass))

/* struct Acl */
struct _Acl
{ 
  ThriftStruct parent; 

  /* public */
  gint32 perms;
  gboolean __isset_perms;
  Id * id;
  gboolean __isset_id;
};
typedef struct _Acl Acl;

struct _AclClass
{
  ThriftStructClass parent;
};
typedef struct _AclClass AclClass;

GType acl_get_type (void);
#define TYPE_ACL (acl_get_type())
#define ACL(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_ACL, Acl))
#define ACL_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_ACL, AclClass))
#define IS_ACL(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_ACL))
#define IS_ACL_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_ACL))
#define ACL_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_ACL, AclClass))

/* struct ChildData */
struct _ChildData
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  Stat * stat;
  gboolean __isset_stat;
  GByteArray * data;
  gboolean __isset_data;
};
typedef struct _ChildData ChildData;

struct _ChildDataClass
{
  ThriftStructClass parent;
};
typedef struct _ChildDataClass ChildDataClass;

GType child_data_get_type (void);
#define TYPE_CHILD_DATA (child_data_get_type())
#define CHILD_DATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CHILD_DATA, ChildData))
#define CHILD_DATA_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CHILD_DATA, ChildDataClass))
#define IS_CHILD_DATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CHILD_DATA))
#define IS_CHILD_DATA_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CHILD_DATA))
#define CHILD_DATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CHILD_DATA, ChildDataClass))

/* struct PathChildrenCacheEvent */
struct _PathChildrenCacheEvent
{ 
  ThriftStruct parent; 

  /* public */
  gchar * cachedPath;
  gboolean __isset_cachedPath;
  PathChildrenCacheEventType type;
  gboolean __isset_type;
  ChildData * data;
  gboolean __isset_data;
};
typedef struct _PathChildrenCacheEvent PathChildrenCacheEvent;

struct _PathChildrenCacheEventClass
{
  ThriftStructClass parent;
};
typedef struct _PathChildrenCacheEventClass PathChildrenCacheEventClass;

GType path_children_cache_event_get_type (void);
#define TYPE_PATH_CHILDREN_CACHE_EVENT (path_children_cache_event_get_type())
#define PATH_CHILDREN_CACHE_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PATH_CHILDREN_CACHE_EVENT, PathChildrenCacheEvent))
#define PATH_CHILDREN_CACHE_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_PATH_CHILDREN_CACHE_EVENT, PathChildrenCacheEventClass))
#define IS_PATH_CHILDREN_CACHE_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PATH_CHILDREN_CACHE_EVENT))
#define IS_PATH_CHILDREN_CACHE_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_PATH_CHILDREN_CACHE_EVENT))
#define PATH_CHILDREN_CACHE_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PATH_CHILDREN_CACHE_EVENT, PathChildrenCacheEventClass))

/* struct SetDataSpec */
struct _SetDataSpec
{ 
  ThriftStruct parent; 

  /* public */
  gchar * path;
  gboolean __isset_path;
  gboolean watched;
  gboolean __isset_watched;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
  gboolean compressed;
  gboolean __isset_compressed;
  Version * version;
  gboolean __isset_version;
  GByteArray * data;
  gboolean __isset_data;
};
typedef struct _SetDataSpec SetDataSpec;

struct _SetDataSpecClass
{
  ThriftStructClass parent;
};
typedef struct _SetDataSpecClass SetDataSpecClass;

GType set_data_spec_get_type (void);
#define TYPE_SET_DATA_SPEC (set_data_spec_get_type())
#define SET_DATA_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SET_DATA_SPEC, SetDataSpec))
#define SET_DATA_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SET_DATA_SPEC, SetDataSpecClass))
#define IS_SET_DATA_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SET_DATA_SPEC))
#define IS_SET_DATA_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SET_DATA_SPEC))
#define SET_DATA_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SET_DATA_SPEC, SetDataSpecClass))

struct _CuratorException
{ 
  ThriftStruct parent; 

  /* public */
  ExceptionType type;
  gboolean __isset_type;
  ZooKeeperExceptionType zooKeeperException;
  gboolean __isset_zooKeeperException;
  NodeExceptionType nodeException;
  gboolean __isset_nodeException;
  gchar * message;
  gboolean __isset_message;
};
typedef struct _CuratorException CuratorException;

struct _CuratorExceptionClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorExceptionClass CuratorExceptionClass;

GType curator_exception_get_type (void);
#define TYPE_CURATOR_EXCEPTION (curator_exception_get_type())
#define CURATOR_EXCEPTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_EXCEPTION, CuratorException))
#define CURATOR_EXCEPTION_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_EXCEPTION, CuratorExceptionClass))
#define IS_CURATOR_EXCEPTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_EXCEPTION))
#define IS_CURATOR_EXCEPTION_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_EXCEPTION))
#define CURATOR_EXCEPTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_EXCEPTION, CuratorExceptionClass))

/* exception */
typedef enum
{
  CURATOR_EXCEPTION_ERROR_CODE
} CuratorExceptionError;

GQuark curator_exception_error_quark (void);
#define CURATOR_EXCEPTION_ERROR (curator_exception_error_quark())


/* struct DiscoveryInstance */
struct _DiscoveryInstance
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  gchar * id;
  gboolean __isset_id;
  gchar * address;
  gboolean __isset_address;
  gint32 port;
  gboolean __isset_port;
  gint32 sslPort;
  gboolean __isset_sslPort;
  GByteArray * payload;
  gboolean __isset_payload;
  gint64 registrationTimeUTC;
  gboolean __isset_registrationTimeUTC;
  DiscoveryInstanceType serviceType;
  gboolean __isset_serviceType;
  gchar * uriSpec;
  gboolean __isset_uriSpec;
};
typedef struct _DiscoveryInstance DiscoveryInstance;

struct _DiscoveryInstanceClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryInstanceClass DiscoveryInstanceClass;

GType discovery_instance_get_type (void);
#define TYPE_DISCOVERY_INSTANCE (discovery_instance_get_type())
#define DISCOVERY_INSTANCE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_INSTANCE, DiscoveryInstance))
#define DISCOVERY_INSTANCE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_INSTANCE, DiscoveryInstanceClass))
#define IS_DISCOVERY_INSTANCE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_INSTANCE))
#define IS_DISCOVERY_INSTANCE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_INSTANCE))
#define DISCOVERY_INSTANCE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_INSTANCE, DiscoveryInstanceClass))

/* struct CuratorEvent */
struct _CuratorEvent
{ 
  ThriftStruct parent; 

  /* public */
  CuratorEventType type;
  gboolean __isset_type;
  gint32 resultCode;
  gboolean __isset_resultCode;
  gchar * path;
  gboolean __isset_path;
  gchar * context;
  gboolean __isset_context;
  Stat * stat;
  gboolean __isset_stat;
  GByteArray * data;
  gboolean __isset_data;
  gchar * name;
  gboolean __isset_name;
  GPtrArray * children;
  gboolean __isset_children;
  GPtrArray * aclList;
  gboolean __isset_aclList;
  WatchedEvent * watchedEvent;
  gboolean __isset_watchedEvent;
  LeaderEvent * leaderEvent;
  gboolean __isset_leaderEvent;
  PathChildrenCacheEvent * childrenCacheEvent;
  gboolean __isset_childrenCacheEvent;
};
typedef struct _CuratorEvent CuratorEvent;

struct _CuratorEventClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorEventClass CuratorEventClass;

GType curator_event_get_type (void);
#define TYPE_CURATOR_EVENT (curator_event_get_type())
#define CURATOR_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_EVENT, CuratorEvent))
#define CURATOR_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_EVENT, CuratorEventClass))
#define IS_CURATOR_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_EVENT))
#define IS_CURATOR_EVENT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_EVENT))
#define CURATOR_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_EVENT, CuratorEventClass))

/* constants */

/* struct CuratorServiceAcquireLockArgs */
struct _CuratorServiceAcquireLockArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  gint32 maxWaitMs;
  gboolean __isset_maxWaitMs;
};
typedef struct _CuratorServiceAcquireLockArgs CuratorServiceAcquireLockArgs;

struct _CuratorServiceAcquireLockArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceAcquireLockArgsClass CuratorServiceAcquireLockArgsClass;

GType curator_service_acquire_lock_args_get_type (void);
#define TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS (curator_service_acquire_lock_args_get_type())
#define CURATOR_SERVICE_ACQUIRE_LOCK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS, CuratorServiceAcquireLockArgs))
#define CURATOR_SERVICE_ACQUIRE_LOCK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS, CuratorServiceAcquireLockArgsClass))
#define IS_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS))
#define IS_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS))
#define CURATOR_SERVICE_ACQUIRE_LOCK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_ARGS, CuratorServiceAcquireLockArgsClass))

/* struct CuratorServiceAcquireLockResult */
struct _CuratorServiceAcquireLockResult
{ 
  ThriftStruct parent; 

  /* public */
  OptionalLockProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceAcquireLockResult CuratorServiceAcquireLockResult;

struct _CuratorServiceAcquireLockResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceAcquireLockResultClass CuratorServiceAcquireLockResultClass;

GType curator_service_acquire_lock_result_get_type (void);
#define TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT (curator_service_acquire_lock_result_get_type())
#define CURATOR_SERVICE_ACQUIRE_LOCK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT, CuratorServiceAcquireLockResult))
#define CURATOR_SERVICE_ACQUIRE_LOCK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT, CuratorServiceAcquireLockResultClass))
#define IS_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT))
#define IS_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT))
#define CURATOR_SERVICE_ACQUIRE_LOCK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_LOCK_RESULT, CuratorServiceAcquireLockResultClass))

/* struct CuratorServiceAcquireSemaphoreArgs */
struct _CuratorServiceAcquireSemaphoreArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  gint32 acquireQty;
  gboolean __isset_acquireQty;
  gint32 maxWaitMs;
  gboolean __isset_maxWaitMs;
  gint32 maxLeases;
  gboolean __isset_maxLeases;
};
typedef struct _CuratorServiceAcquireSemaphoreArgs CuratorServiceAcquireSemaphoreArgs;

struct _CuratorServiceAcquireSemaphoreArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceAcquireSemaphoreArgsClass CuratorServiceAcquireSemaphoreArgsClass;

GType curator_service_acquire_semaphore_args_get_type (void);
#define TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS (curator_service_acquire_semaphore_args_get_type())
#define CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS, CuratorServiceAcquireSemaphoreArgs))
#define CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS, CuratorServiceAcquireSemaphoreArgsClass))
#define IS_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS))
#define IS_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS))
#define CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_ARGS, CuratorServiceAcquireSemaphoreArgsClass))

/* struct CuratorServiceAcquireSemaphoreResult */
struct _CuratorServiceAcquireSemaphoreResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceAcquireSemaphoreResult CuratorServiceAcquireSemaphoreResult;

struct _CuratorServiceAcquireSemaphoreResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceAcquireSemaphoreResultClass CuratorServiceAcquireSemaphoreResultClass;

GType curator_service_acquire_semaphore_result_get_type (void);
#define TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT (curator_service_acquire_semaphore_result_get_type())
#define CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT, CuratorServiceAcquireSemaphoreResult))
#define CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT, CuratorServiceAcquireSemaphoreResultClass))
#define IS_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT))
#define IS_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT))
#define CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_ACQUIRE_SEMAPHORE_RESULT, CuratorServiceAcquireSemaphoreResultClass))

/* struct CuratorServiceCloseCuratorProjectionArgs */
struct _CuratorServiceCloseCuratorProjectionArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
};
typedef struct _CuratorServiceCloseCuratorProjectionArgs CuratorServiceCloseCuratorProjectionArgs;

struct _CuratorServiceCloseCuratorProjectionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceCloseCuratorProjectionArgsClass CuratorServiceCloseCuratorProjectionArgsClass;

GType curator_service_close_curator_projection_args_get_type (void);
#define TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS (curator_service_close_curator_projection_args_get_type())
#define CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS, CuratorServiceCloseCuratorProjectionArgs))
#define CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS, CuratorServiceCloseCuratorProjectionArgsClass))
#define IS_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS))
#define IS_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS))
#define CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_ARGS, CuratorServiceCloseCuratorProjectionArgsClass))

/* struct CuratorServiceCloseCuratorProjectionResult */
struct _CuratorServiceCloseCuratorProjectionResult
{ 
  ThriftStruct parent; 

  /* public */
};
typedef struct _CuratorServiceCloseCuratorProjectionResult CuratorServiceCloseCuratorProjectionResult;

struct _CuratorServiceCloseCuratorProjectionResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceCloseCuratorProjectionResultClass CuratorServiceCloseCuratorProjectionResultClass;

GType curator_service_close_curator_projection_result_get_type (void);
#define TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT (curator_service_close_curator_projection_result_get_type())
#define CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT, CuratorServiceCloseCuratorProjectionResult))
#define CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT, CuratorServiceCloseCuratorProjectionResultClass))
#define IS_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT))
#define IS_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT))
#define CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_CLOSE_CURATOR_PROJECTION_RESULT, CuratorServiceCloseCuratorProjectionResultClass))

/* struct CuratorServiceCloseGenericProjectionArgs */
struct _CuratorServiceCloseGenericProjectionArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * id;
  gboolean __isset_id;
};
typedef struct _CuratorServiceCloseGenericProjectionArgs CuratorServiceCloseGenericProjectionArgs;

struct _CuratorServiceCloseGenericProjectionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceCloseGenericProjectionArgsClass CuratorServiceCloseGenericProjectionArgsClass;

GType curator_service_close_generic_projection_args_get_type (void);
#define TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS (curator_service_close_generic_projection_args_get_type())
#define CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS, CuratorServiceCloseGenericProjectionArgs))
#define CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS, CuratorServiceCloseGenericProjectionArgsClass))
#define IS_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS))
#define IS_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS))
#define CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_ARGS, CuratorServiceCloseGenericProjectionArgsClass))

/* struct CuratorServiceCloseGenericProjectionResult */
struct _CuratorServiceCloseGenericProjectionResult
{ 
  ThriftStruct parent; 

  /* public */
  gboolean success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceCloseGenericProjectionResult CuratorServiceCloseGenericProjectionResult;

struct _CuratorServiceCloseGenericProjectionResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceCloseGenericProjectionResultClass CuratorServiceCloseGenericProjectionResultClass;

GType curator_service_close_generic_projection_result_get_type (void);
#define TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT (curator_service_close_generic_projection_result_get_type())
#define CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT, CuratorServiceCloseGenericProjectionResult))
#define CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT, CuratorServiceCloseGenericProjectionResultClass))
#define IS_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT))
#define IS_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT))
#define CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_CLOSE_GENERIC_PROJECTION_RESULT, CuratorServiceCloseGenericProjectionResultClass))

/* struct CuratorServiceCreateNodeArgs */
struct _CuratorServiceCreateNodeArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  CreateSpec * spec;
  gboolean __isset_spec;
};
typedef struct _CuratorServiceCreateNodeArgs CuratorServiceCreateNodeArgs;

struct _CuratorServiceCreateNodeArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceCreateNodeArgsClass CuratorServiceCreateNodeArgsClass;

GType curator_service_create_node_args_get_type (void);
#define TYPE_CURATOR_SERVICE_CREATE_NODE_ARGS (curator_service_create_node_args_get_type())
#define CURATOR_SERVICE_CREATE_NODE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_CREATE_NODE_ARGS, CuratorServiceCreateNodeArgs))
#define CURATOR_SERVICE_CREATE_NODE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_CREATE_NODE_ARGS, CuratorServiceCreateNodeArgsClass))
#define IS_CURATOR_SERVICE_CREATE_NODE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_CREATE_NODE_ARGS))
#define IS_CURATOR_SERVICE_CREATE_NODE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_CREATE_NODE_ARGS))
#define CURATOR_SERVICE_CREATE_NODE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_CREATE_NODE_ARGS, CuratorServiceCreateNodeArgsClass))

/* struct CuratorServiceCreateNodeResult */
struct _CuratorServiceCreateNodeResult
{ 
  ThriftStruct parent; 

  /* public */
  OptionalPath * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceCreateNodeResult CuratorServiceCreateNodeResult;

struct _CuratorServiceCreateNodeResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceCreateNodeResultClass CuratorServiceCreateNodeResultClass;

GType curator_service_create_node_result_get_type (void);
#define TYPE_CURATOR_SERVICE_CREATE_NODE_RESULT (curator_service_create_node_result_get_type())
#define CURATOR_SERVICE_CREATE_NODE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_CREATE_NODE_RESULT, CuratorServiceCreateNodeResult))
#define CURATOR_SERVICE_CREATE_NODE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_CREATE_NODE_RESULT, CuratorServiceCreateNodeResultClass))
#define IS_CURATOR_SERVICE_CREATE_NODE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_CREATE_NODE_RESULT))
#define IS_CURATOR_SERVICE_CREATE_NODE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_CREATE_NODE_RESULT))
#define CURATOR_SERVICE_CREATE_NODE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_CREATE_NODE_RESULT, CuratorServiceCreateNodeResultClass))

/* struct CuratorServiceDeleteNodeArgs */
struct _CuratorServiceDeleteNodeArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DeleteSpec * spec;
  gboolean __isset_spec;
};
typedef struct _CuratorServiceDeleteNodeArgs CuratorServiceDeleteNodeArgs;

struct _CuratorServiceDeleteNodeArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceDeleteNodeArgsClass CuratorServiceDeleteNodeArgsClass;

GType curator_service_delete_node_args_get_type (void);
#define TYPE_CURATOR_SERVICE_DELETE_NODE_ARGS (curator_service_delete_node_args_get_type())
#define CURATOR_SERVICE_DELETE_NODE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_DELETE_NODE_ARGS, CuratorServiceDeleteNodeArgs))
#define CURATOR_SERVICE_DELETE_NODE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_DELETE_NODE_ARGS, CuratorServiceDeleteNodeArgsClass))
#define IS_CURATOR_SERVICE_DELETE_NODE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_DELETE_NODE_ARGS))
#define IS_CURATOR_SERVICE_DELETE_NODE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_DELETE_NODE_ARGS))
#define CURATOR_SERVICE_DELETE_NODE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_DELETE_NODE_ARGS, CuratorServiceDeleteNodeArgsClass))

/* struct CuratorServiceDeleteNodeResult */
struct _CuratorServiceDeleteNodeResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceDeleteNodeResult CuratorServiceDeleteNodeResult;

struct _CuratorServiceDeleteNodeResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceDeleteNodeResultClass CuratorServiceDeleteNodeResultClass;

GType curator_service_delete_node_result_get_type (void);
#define TYPE_CURATOR_SERVICE_DELETE_NODE_RESULT (curator_service_delete_node_result_get_type())
#define CURATOR_SERVICE_DELETE_NODE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_DELETE_NODE_RESULT, CuratorServiceDeleteNodeResult))
#define CURATOR_SERVICE_DELETE_NODE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_DELETE_NODE_RESULT, CuratorServiceDeleteNodeResultClass))
#define IS_CURATOR_SERVICE_DELETE_NODE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_DELETE_NODE_RESULT))
#define IS_CURATOR_SERVICE_DELETE_NODE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_DELETE_NODE_RESULT))
#define CURATOR_SERVICE_DELETE_NODE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_DELETE_NODE_RESULT, CuratorServiceDeleteNodeResultClass))

/* struct CuratorServiceExistsArgs */
struct _CuratorServiceExistsArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  ExistsSpec * spec;
  gboolean __isset_spec;
};
typedef struct _CuratorServiceExistsArgs CuratorServiceExistsArgs;

struct _CuratorServiceExistsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceExistsArgsClass CuratorServiceExistsArgsClass;

GType curator_service_exists_args_get_type (void);
#define TYPE_CURATOR_SERVICE_EXISTS_ARGS (curator_service_exists_args_get_type())
#define CURATOR_SERVICE_EXISTS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_EXISTS_ARGS, CuratorServiceExistsArgs))
#define CURATOR_SERVICE_EXISTS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_EXISTS_ARGS, CuratorServiceExistsArgsClass))
#define IS_CURATOR_SERVICE_EXISTS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_EXISTS_ARGS))
#define IS_CURATOR_SERVICE_EXISTS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_EXISTS_ARGS))
#define CURATOR_SERVICE_EXISTS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_EXISTS_ARGS, CuratorServiceExistsArgsClass))

/* struct CuratorServiceExistsResult */
struct _CuratorServiceExistsResult
{ 
  ThriftStruct parent; 

  /* public */
  OptionalStat * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceExistsResult CuratorServiceExistsResult;

struct _CuratorServiceExistsResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceExistsResultClass CuratorServiceExistsResultClass;

GType curator_service_exists_result_get_type (void);
#define TYPE_CURATOR_SERVICE_EXISTS_RESULT (curator_service_exists_result_get_type())
#define CURATOR_SERVICE_EXISTS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_EXISTS_RESULT, CuratorServiceExistsResult))
#define CURATOR_SERVICE_EXISTS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_EXISTS_RESULT, CuratorServiceExistsResultClass))
#define IS_CURATOR_SERVICE_EXISTS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_EXISTS_RESULT))
#define IS_CURATOR_SERVICE_EXISTS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_EXISTS_RESULT))
#define CURATOR_SERVICE_EXISTS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_EXISTS_RESULT, CuratorServiceExistsResultClass))

/* struct CuratorServiceGetChildrenArgs */
struct _CuratorServiceGetChildrenArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  GetChildrenSpec * spec;
  gboolean __isset_spec;
};
typedef struct _CuratorServiceGetChildrenArgs CuratorServiceGetChildrenArgs;

struct _CuratorServiceGetChildrenArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetChildrenArgsClass CuratorServiceGetChildrenArgsClass;

GType curator_service_get_children_args_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_CHILDREN_ARGS (curator_service_get_children_args_get_type())
#define CURATOR_SERVICE_GET_CHILDREN_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_CHILDREN_ARGS, CuratorServiceGetChildrenArgs))
#define CURATOR_SERVICE_GET_CHILDREN_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_CHILDREN_ARGS, CuratorServiceGetChildrenArgsClass))
#define IS_CURATOR_SERVICE_GET_CHILDREN_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_CHILDREN_ARGS))
#define IS_CURATOR_SERVICE_GET_CHILDREN_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_CHILDREN_ARGS))
#define CURATOR_SERVICE_GET_CHILDREN_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_CHILDREN_ARGS, CuratorServiceGetChildrenArgsClass))

/* struct CuratorServiceGetChildrenResult */
struct _CuratorServiceGetChildrenResult
{ 
  ThriftStruct parent; 

  /* public */
  OptionalChildrenList * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceGetChildrenResult CuratorServiceGetChildrenResult;

struct _CuratorServiceGetChildrenResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetChildrenResultClass CuratorServiceGetChildrenResultClass;

GType curator_service_get_children_result_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_CHILDREN_RESULT (curator_service_get_children_result_get_type())
#define CURATOR_SERVICE_GET_CHILDREN_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_CHILDREN_RESULT, CuratorServiceGetChildrenResult))
#define CURATOR_SERVICE_GET_CHILDREN_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_CHILDREN_RESULT, CuratorServiceGetChildrenResultClass))
#define IS_CURATOR_SERVICE_GET_CHILDREN_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_CHILDREN_RESULT))
#define IS_CURATOR_SERVICE_GET_CHILDREN_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_CHILDREN_RESULT))
#define CURATOR_SERVICE_GET_CHILDREN_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_CHILDREN_RESULT, CuratorServiceGetChildrenResultClass))

/* struct CuratorServiceGetDataArgs */
struct _CuratorServiceGetDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  GetDataSpec * spec;
  gboolean __isset_spec;
};
typedef struct _CuratorServiceGetDataArgs CuratorServiceGetDataArgs;

struct _CuratorServiceGetDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetDataArgsClass CuratorServiceGetDataArgsClass;

GType curator_service_get_data_args_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_DATA_ARGS (curator_service_get_data_args_get_type())
#define CURATOR_SERVICE_GET_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_DATA_ARGS, CuratorServiceGetDataArgs))
#define CURATOR_SERVICE_GET_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_DATA_ARGS, CuratorServiceGetDataArgsClass))
#define IS_CURATOR_SERVICE_GET_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_DATA_ARGS))
#define IS_CURATOR_SERVICE_GET_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_DATA_ARGS))
#define CURATOR_SERVICE_GET_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_DATA_ARGS, CuratorServiceGetDataArgsClass))

/* struct CuratorServiceGetDataResult */
struct _CuratorServiceGetDataResult
{ 
  ThriftStruct parent; 

  /* public */
  OptionalData * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceGetDataResult CuratorServiceGetDataResult;

struct _CuratorServiceGetDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetDataResultClass CuratorServiceGetDataResultClass;

GType curator_service_get_data_result_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_DATA_RESULT (curator_service_get_data_result_get_type())
#define CURATOR_SERVICE_GET_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_DATA_RESULT, CuratorServiceGetDataResult))
#define CURATOR_SERVICE_GET_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_DATA_RESULT, CuratorServiceGetDataResultClass))
#define IS_CURATOR_SERVICE_GET_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_DATA_RESULT))
#define IS_CURATOR_SERVICE_GET_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_DATA_RESULT))
#define CURATOR_SERVICE_GET_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_DATA_RESULT, CuratorServiceGetDataResultClass))

/* struct CuratorServiceGetLeaderParticipantsArgs */
struct _CuratorServiceGetLeaderParticipantsArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  LeaderProjection * leaderProjection;
  gboolean __isset_leaderProjection;
};
typedef struct _CuratorServiceGetLeaderParticipantsArgs CuratorServiceGetLeaderParticipantsArgs;

struct _CuratorServiceGetLeaderParticipantsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetLeaderParticipantsArgsClass CuratorServiceGetLeaderParticipantsArgsClass;

GType curator_service_get_leader_participants_args_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS (curator_service_get_leader_participants_args_get_type())
#define CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS, CuratorServiceGetLeaderParticipantsArgs))
#define CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS, CuratorServiceGetLeaderParticipantsArgsClass))
#define IS_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS))
#define IS_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS))
#define CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_ARGS, CuratorServiceGetLeaderParticipantsArgsClass))

/* struct CuratorServiceGetLeaderParticipantsResult */
struct _CuratorServiceGetLeaderParticipantsResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceGetLeaderParticipantsResult CuratorServiceGetLeaderParticipantsResult;

struct _CuratorServiceGetLeaderParticipantsResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetLeaderParticipantsResultClass CuratorServiceGetLeaderParticipantsResultClass;

GType curator_service_get_leader_participants_result_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT (curator_service_get_leader_participants_result_get_type())
#define CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT, CuratorServiceGetLeaderParticipantsResult))
#define CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT, CuratorServiceGetLeaderParticipantsResultClass))
#define IS_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT))
#define IS_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT))
#define CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_LEADER_PARTICIPANTS_RESULT, CuratorServiceGetLeaderParticipantsResultClass))

/* struct CuratorServiceGetNodeCacheDataArgs */
struct _CuratorServiceGetNodeCacheDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  NodeCacheProjection * cacheProjection;
  gboolean __isset_cacheProjection;
};
typedef struct _CuratorServiceGetNodeCacheDataArgs CuratorServiceGetNodeCacheDataArgs;

struct _CuratorServiceGetNodeCacheDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetNodeCacheDataArgsClass CuratorServiceGetNodeCacheDataArgsClass;

GType curator_service_get_node_cache_data_args_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS (curator_service_get_node_cache_data_args_get_type())
#define CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS, CuratorServiceGetNodeCacheDataArgs))
#define CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS, CuratorServiceGetNodeCacheDataArgsClass))
#define IS_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS))
#define IS_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS))
#define CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_ARGS, CuratorServiceGetNodeCacheDataArgsClass))

/* struct CuratorServiceGetNodeCacheDataResult */
struct _CuratorServiceGetNodeCacheDataResult
{ 
  ThriftStruct parent; 

  /* public */
  ChildData * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceGetNodeCacheDataResult CuratorServiceGetNodeCacheDataResult;

struct _CuratorServiceGetNodeCacheDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetNodeCacheDataResultClass CuratorServiceGetNodeCacheDataResultClass;

GType curator_service_get_node_cache_data_result_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT (curator_service_get_node_cache_data_result_get_type())
#define CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT, CuratorServiceGetNodeCacheDataResult))
#define CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT, CuratorServiceGetNodeCacheDataResultClass))
#define IS_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT))
#define IS_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT))
#define CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_NODE_CACHE_DATA_RESULT, CuratorServiceGetNodeCacheDataResultClass))

/* struct CuratorServiceGetPathChildrenCacheDataArgs */
struct _CuratorServiceGetPathChildrenCacheDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  PathChildrenCacheProjection * cacheProjection;
  gboolean __isset_cacheProjection;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataArgs CuratorServiceGetPathChildrenCacheDataArgs;

struct _CuratorServiceGetPathChildrenCacheDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataArgsClass CuratorServiceGetPathChildrenCacheDataArgsClass;

GType curator_service_get_path_children_cache_data_args_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS (curator_service_get_path_children_cache_data_args_get_type())
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS, CuratorServiceGetPathChildrenCacheDataArgs))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS, CuratorServiceGetPathChildrenCacheDataArgsClass))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_ARGS, CuratorServiceGetPathChildrenCacheDataArgsClass))

/* struct CuratorServiceGetPathChildrenCacheDataResult */
struct _CuratorServiceGetPathChildrenCacheDataResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataResult CuratorServiceGetPathChildrenCacheDataResult;

struct _CuratorServiceGetPathChildrenCacheDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataResultClass CuratorServiceGetPathChildrenCacheDataResultClass;

GType curator_service_get_path_children_cache_data_result_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT (curator_service_get_path_children_cache_data_result_get_type())
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT, CuratorServiceGetPathChildrenCacheDataResult))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT, CuratorServiceGetPathChildrenCacheDataResultClass))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_RESULT, CuratorServiceGetPathChildrenCacheDataResultClass))

/* struct CuratorServiceGetPathChildrenCacheDataForPathArgs */
struct _CuratorServiceGetPathChildrenCacheDataForPathArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  PathChildrenCacheProjection * cacheProjection;
  gboolean __isset_cacheProjection;
  gchar * path;
  gboolean __isset_path;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataForPathArgs CuratorServiceGetPathChildrenCacheDataForPathArgs;

struct _CuratorServiceGetPathChildrenCacheDataForPathArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataForPathArgsClass CuratorServiceGetPathChildrenCacheDataForPathArgsClass;

GType curator_service_get_path_children_cache_data_for_path_args_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS (curator_service_get_path_children_cache_data_for_path_args_get_type())
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS, CuratorServiceGetPathChildrenCacheDataForPathArgs))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS, CuratorServiceGetPathChildrenCacheDataForPathArgsClass))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_ARGS, CuratorServiceGetPathChildrenCacheDataForPathArgsClass))

/* struct CuratorServiceGetPathChildrenCacheDataForPathResult */
struct _CuratorServiceGetPathChildrenCacheDataForPathResult
{ 
  ThriftStruct parent; 

  /* public */
  ChildData * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataForPathResult CuratorServiceGetPathChildrenCacheDataForPathResult;

struct _CuratorServiceGetPathChildrenCacheDataForPathResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceGetPathChildrenCacheDataForPathResultClass CuratorServiceGetPathChildrenCacheDataForPathResultClass;

GType curator_service_get_path_children_cache_data_for_path_result_get_type (void);
#define TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT (curator_service_get_path_children_cache_data_for_path_result_get_type())
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT, CuratorServiceGetPathChildrenCacheDataForPathResult))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT, CuratorServiceGetPathChildrenCacheDataForPathResultClass))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT))
#define IS_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT))
#define CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_GET_PATH_CHILDREN_CACHE_DATA_FOR_PATH_RESULT, CuratorServiceGetPathChildrenCacheDataForPathResultClass))

/* struct CuratorServiceIsLeaderArgs */
struct _CuratorServiceIsLeaderArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  LeaderProjection * leaderProjection;
  gboolean __isset_leaderProjection;
};
typedef struct _CuratorServiceIsLeaderArgs CuratorServiceIsLeaderArgs;

struct _CuratorServiceIsLeaderArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceIsLeaderArgsClass CuratorServiceIsLeaderArgsClass;

GType curator_service_is_leader_args_get_type (void);
#define TYPE_CURATOR_SERVICE_IS_LEADER_ARGS (curator_service_is_leader_args_get_type())
#define CURATOR_SERVICE_IS_LEADER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_IS_LEADER_ARGS, CuratorServiceIsLeaderArgs))
#define CURATOR_SERVICE_IS_LEADER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_IS_LEADER_ARGS, CuratorServiceIsLeaderArgsClass))
#define IS_CURATOR_SERVICE_IS_LEADER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_IS_LEADER_ARGS))
#define IS_CURATOR_SERVICE_IS_LEADER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_IS_LEADER_ARGS))
#define CURATOR_SERVICE_IS_LEADER_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_IS_LEADER_ARGS, CuratorServiceIsLeaderArgsClass))

/* struct CuratorServiceIsLeaderResult */
struct _CuratorServiceIsLeaderResult
{ 
  ThriftStruct parent; 

  /* public */
  gboolean success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceIsLeaderResult CuratorServiceIsLeaderResult;

struct _CuratorServiceIsLeaderResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceIsLeaderResultClass CuratorServiceIsLeaderResultClass;

GType curator_service_is_leader_result_get_type (void);
#define TYPE_CURATOR_SERVICE_IS_LEADER_RESULT (curator_service_is_leader_result_get_type())
#define CURATOR_SERVICE_IS_LEADER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_IS_LEADER_RESULT, CuratorServiceIsLeaderResult))
#define CURATOR_SERVICE_IS_LEADER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_IS_LEADER_RESULT, CuratorServiceIsLeaderResultClass))
#define IS_CURATOR_SERVICE_IS_LEADER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_IS_LEADER_RESULT))
#define IS_CURATOR_SERVICE_IS_LEADER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_IS_LEADER_RESULT))
#define CURATOR_SERVICE_IS_LEADER_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_IS_LEADER_RESULT, CuratorServiceIsLeaderResultClass))

/* struct CuratorServiceNewCuratorProjectionArgs */
struct _CuratorServiceNewCuratorProjectionArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * connectionName;
  gboolean __isset_connectionName;
};
typedef struct _CuratorServiceNewCuratorProjectionArgs CuratorServiceNewCuratorProjectionArgs;

struct _CuratorServiceNewCuratorProjectionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceNewCuratorProjectionArgsClass CuratorServiceNewCuratorProjectionArgsClass;

GType curator_service_new_curator_projection_args_get_type (void);
#define TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS (curator_service_new_curator_projection_args_get_type())
#define CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS, CuratorServiceNewCuratorProjectionArgs))
#define CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS, CuratorServiceNewCuratorProjectionArgsClass))
#define IS_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS))
#define IS_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS))
#define CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_ARGS, CuratorServiceNewCuratorProjectionArgsClass))

/* struct CuratorServiceNewCuratorProjectionResult */
struct _CuratorServiceNewCuratorProjectionResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceNewCuratorProjectionResult CuratorServiceNewCuratorProjectionResult;

struct _CuratorServiceNewCuratorProjectionResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceNewCuratorProjectionResultClass CuratorServiceNewCuratorProjectionResultClass;

GType curator_service_new_curator_projection_result_get_type (void);
#define TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT (curator_service_new_curator_projection_result_get_type())
#define CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT, CuratorServiceNewCuratorProjectionResult))
#define CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT, CuratorServiceNewCuratorProjectionResultClass))
#define IS_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT))
#define IS_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT))
#define CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_NEW_CURATOR_PROJECTION_RESULT, CuratorServiceNewCuratorProjectionResultClass))

/* struct CuratorServicePingCuratorProjectionArgs */
struct _CuratorServicePingCuratorProjectionArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
};
typedef struct _CuratorServicePingCuratorProjectionArgs CuratorServicePingCuratorProjectionArgs;

struct _CuratorServicePingCuratorProjectionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServicePingCuratorProjectionArgsClass CuratorServicePingCuratorProjectionArgsClass;

GType curator_service_ping_curator_projection_args_get_type (void);
#define TYPE_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS (curator_service_ping_curator_projection_args_get_type())
#define CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS, CuratorServicePingCuratorProjectionArgs))
#define CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS, CuratorServicePingCuratorProjectionArgsClass))
#define IS_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS))
#define IS_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS))
#define CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_PING_CURATOR_PROJECTION_ARGS, CuratorServicePingCuratorProjectionArgsClass))

/* struct CuratorServiceSetDataArgs */
struct _CuratorServiceSetDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  SetDataSpec * spec;
  gboolean __isset_spec;
};
typedef struct _CuratorServiceSetDataArgs CuratorServiceSetDataArgs;

struct _CuratorServiceSetDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceSetDataArgsClass CuratorServiceSetDataArgsClass;

GType curator_service_set_data_args_get_type (void);
#define TYPE_CURATOR_SERVICE_SET_DATA_ARGS (curator_service_set_data_args_get_type())
#define CURATOR_SERVICE_SET_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_SET_DATA_ARGS, CuratorServiceSetDataArgs))
#define CURATOR_SERVICE_SET_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_SET_DATA_ARGS, CuratorServiceSetDataArgsClass))
#define IS_CURATOR_SERVICE_SET_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_SET_DATA_ARGS))
#define IS_CURATOR_SERVICE_SET_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_SET_DATA_ARGS))
#define CURATOR_SERVICE_SET_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_SET_DATA_ARGS, CuratorServiceSetDataArgsClass))

/* struct CuratorServiceSetDataResult */
struct _CuratorServiceSetDataResult
{ 
  ThriftStruct parent; 

  /* public */
  OptionalStat * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceSetDataResult CuratorServiceSetDataResult;

struct _CuratorServiceSetDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceSetDataResultClass CuratorServiceSetDataResultClass;

GType curator_service_set_data_result_get_type (void);
#define TYPE_CURATOR_SERVICE_SET_DATA_RESULT (curator_service_set_data_result_get_type())
#define CURATOR_SERVICE_SET_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_SET_DATA_RESULT, CuratorServiceSetDataResult))
#define CURATOR_SERVICE_SET_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_SET_DATA_RESULT, CuratorServiceSetDataResultClass))
#define IS_CURATOR_SERVICE_SET_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_SET_DATA_RESULT))
#define IS_CURATOR_SERVICE_SET_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_SET_DATA_RESULT))
#define CURATOR_SERVICE_SET_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_SET_DATA_RESULT, CuratorServiceSetDataResultClass))

/* struct CuratorServiceStartLeaderSelectorArgs */
struct _CuratorServiceStartLeaderSelectorArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  gchar * participantId;
  gboolean __isset_participantId;
  gint32 waitForLeadershipMs;
  gboolean __isset_waitForLeadershipMs;
};
typedef struct _CuratorServiceStartLeaderSelectorArgs CuratorServiceStartLeaderSelectorArgs;

struct _CuratorServiceStartLeaderSelectorArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartLeaderSelectorArgsClass CuratorServiceStartLeaderSelectorArgsClass;

GType curator_service_start_leader_selector_args_get_type (void);
#define TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS (curator_service_start_leader_selector_args_get_type())
#define CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS, CuratorServiceStartLeaderSelectorArgs))
#define CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS, CuratorServiceStartLeaderSelectorArgsClass))
#define IS_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS))
#define IS_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS))
#define CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_ARGS, CuratorServiceStartLeaderSelectorArgsClass))

/* struct CuratorServiceStartLeaderSelectorResult */
struct _CuratorServiceStartLeaderSelectorResult
{ 
  ThriftStruct parent; 

  /* public */
  LeaderResult * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceStartLeaderSelectorResult CuratorServiceStartLeaderSelectorResult;

struct _CuratorServiceStartLeaderSelectorResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartLeaderSelectorResultClass CuratorServiceStartLeaderSelectorResultClass;

GType curator_service_start_leader_selector_result_get_type (void);
#define TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT (curator_service_start_leader_selector_result_get_type())
#define CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT, CuratorServiceStartLeaderSelectorResult))
#define CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT, CuratorServiceStartLeaderSelectorResultClass))
#define IS_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT))
#define IS_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT))
#define CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_LEADER_SELECTOR_RESULT, CuratorServiceStartLeaderSelectorResultClass))

/* struct CuratorServiceStartNodeCacheArgs */
struct _CuratorServiceStartNodeCacheArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  gboolean dataIsCompressed;
  gboolean __isset_dataIsCompressed;
  gboolean buildInitial;
  gboolean __isset_buildInitial;
};
typedef struct _CuratorServiceStartNodeCacheArgs CuratorServiceStartNodeCacheArgs;

struct _CuratorServiceStartNodeCacheArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartNodeCacheArgsClass CuratorServiceStartNodeCacheArgsClass;

GType curator_service_start_node_cache_args_get_type (void);
#define TYPE_CURATOR_SERVICE_START_NODE_CACHE_ARGS (curator_service_start_node_cache_args_get_type())
#define CURATOR_SERVICE_START_NODE_CACHE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_NODE_CACHE_ARGS, CuratorServiceStartNodeCacheArgs))
#define CURATOR_SERVICE_START_NODE_CACHE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_NODE_CACHE_ARGS, CuratorServiceStartNodeCacheArgsClass))
#define IS_CURATOR_SERVICE_START_NODE_CACHE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_NODE_CACHE_ARGS))
#define IS_CURATOR_SERVICE_START_NODE_CACHE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_NODE_CACHE_ARGS))
#define CURATOR_SERVICE_START_NODE_CACHE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_NODE_CACHE_ARGS, CuratorServiceStartNodeCacheArgsClass))

/* struct CuratorServiceStartNodeCacheResult */
struct _CuratorServiceStartNodeCacheResult
{ 
  ThriftStruct parent; 

  /* public */
  NodeCacheProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceStartNodeCacheResult CuratorServiceStartNodeCacheResult;

struct _CuratorServiceStartNodeCacheResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartNodeCacheResultClass CuratorServiceStartNodeCacheResultClass;

GType curator_service_start_node_cache_result_get_type (void);
#define TYPE_CURATOR_SERVICE_START_NODE_CACHE_RESULT (curator_service_start_node_cache_result_get_type())
#define CURATOR_SERVICE_START_NODE_CACHE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_NODE_CACHE_RESULT, CuratorServiceStartNodeCacheResult))
#define CURATOR_SERVICE_START_NODE_CACHE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_NODE_CACHE_RESULT, CuratorServiceStartNodeCacheResultClass))
#define IS_CURATOR_SERVICE_START_NODE_CACHE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_NODE_CACHE_RESULT))
#define IS_CURATOR_SERVICE_START_NODE_CACHE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_NODE_CACHE_RESULT))
#define CURATOR_SERVICE_START_NODE_CACHE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_NODE_CACHE_RESULT, CuratorServiceStartNodeCacheResultClass))

/* struct CuratorServiceStartPathChildrenCacheArgs */
struct _CuratorServiceStartPathChildrenCacheArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  gboolean cacheData;
  gboolean __isset_cacheData;
  gboolean dataIsCompressed;
  gboolean __isset_dataIsCompressed;
  PathChildrenCacheStartMode startMode;
  gboolean __isset_startMode;
};
typedef struct _CuratorServiceStartPathChildrenCacheArgs CuratorServiceStartPathChildrenCacheArgs;

struct _CuratorServiceStartPathChildrenCacheArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartPathChildrenCacheArgsClass CuratorServiceStartPathChildrenCacheArgsClass;

GType curator_service_start_path_children_cache_args_get_type (void);
#define TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS (curator_service_start_path_children_cache_args_get_type())
#define CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS, CuratorServiceStartPathChildrenCacheArgs))
#define CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS, CuratorServiceStartPathChildrenCacheArgsClass))
#define IS_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS))
#define IS_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS))
#define CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_ARGS, CuratorServiceStartPathChildrenCacheArgsClass))

/* struct CuratorServiceStartPathChildrenCacheResult */
struct _CuratorServiceStartPathChildrenCacheResult
{ 
  ThriftStruct parent; 

  /* public */
  PathChildrenCacheProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceStartPathChildrenCacheResult CuratorServiceStartPathChildrenCacheResult;

struct _CuratorServiceStartPathChildrenCacheResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartPathChildrenCacheResultClass CuratorServiceStartPathChildrenCacheResultClass;

GType curator_service_start_path_children_cache_result_get_type (void);
#define TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT (curator_service_start_path_children_cache_result_get_type())
#define CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT, CuratorServiceStartPathChildrenCacheResult))
#define CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT, CuratorServiceStartPathChildrenCacheResultClass))
#define IS_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT))
#define IS_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT))
#define CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_PATH_CHILDREN_CACHE_RESULT, CuratorServiceStartPathChildrenCacheResultClass))

/* struct CuratorServiceStartPersistentEphemeralNodeArgs */
struct _CuratorServiceStartPersistentEphemeralNodeArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  GByteArray * data;
  gboolean __isset_data;
  PersistentEphemeralNodeMode mode;
  gboolean __isset_mode;
};
typedef struct _CuratorServiceStartPersistentEphemeralNodeArgs CuratorServiceStartPersistentEphemeralNodeArgs;

struct _CuratorServiceStartPersistentEphemeralNodeArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartPersistentEphemeralNodeArgsClass CuratorServiceStartPersistentEphemeralNodeArgsClass;

GType curator_service_start_persistent_ephemeral_node_args_get_type (void);
#define TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS (curator_service_start_persistent_ephemeral_node_args_get_type())
#define CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS, CuratorServiceStartPersistentEphemeralNodeArgs))
#define CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS, CuratorServiceStartPersistentEphemeralNodeArgsClass))
#define IS_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS))
#define IS_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS))
#define CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_ARGS, CuratorServiceStartPersistentEphemeralNodeArgsClass))

/* struct CuratorServiceStartPersistentEphemeralNodeResult */
struct _CuratorServiceStartPersistentEphemeralNodeResult
{ 
  ThriftStruct parent; 

  /* public */
  PersistentEphemeralNodeProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceStartPersistentEphemeralNodeResult CuratorServiceStartPersistentEphemeralNodeResult;

struct _CuratorServiceStartPersistentEphemeralNodeResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceStartPersistentEphemeralNodeResultClass CuratorServiceStartPersistentEphemeralNodeResultClass;

GType curator_service_start_persistent_ephemeral_node_result_get_type (void);
#define TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT (curator_service_start_persistent_ephemeral_node_result_get_type())
#define CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT, CuratorServiceStartPersistentEphemeralNodeResult))
#define CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT, CuratorServiceStartPersistentEphemeralNodeResultClass))
#define IS_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT))
#define IS_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT))
#define CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_START_PERSISTENT_EPHEMERAL_NODE_RESULT, CuratorServiceStartPersistentEphemeralNodeResultClass))

/* struct CuratorServiceSyncArgs */
struct _CuratorServiceSyncArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * path;
  gboolean __isset_path;
  gchar * asyncContext;
  gboolean __isset_asyncContext;
};
typedef struct _CuratorServiceSyncArgs CuratorServiceSyncArgs;

struct _CuratorServiceSyncArgsClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceSyncArgsClass CuratorServiceSyncArgsClass;

GType curator_service_sync_args_get_type (void);
#define TYPE_CURATOR_SERVICE_SYNC_ARGS (curator_service_sync_args_get_type())
#define CURATOR_SERVICE_SYNC_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_SYNC_ARGS, CuratorServiceSyncArgs))
#define CURATOR_SERVICE_SYNC_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_SYNC_ARGS, CuratorServiceSyncArgsClass))
#define IS_CURATOR_SERVICE_SYNC_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_SYNC_ARGS))
#define IS_CURATOR_SERVICE_SYNC_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_SYNC_ARGS))
#define CURATOR_SERVICE_SYNC_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_SYNC_ARGS, CuratorServiceSyncArgsClass))

/* struct CuratorServiceSyncResult */
struct _CuratorServiceSyncResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _CuratorServiceSyncResult CuratorServiceSyncResult;

struct _CuratorServiceSyncResultClass
{
  ThriftStructClass parent;
};
typedef struct _CuratorServiceSyncResultClass CuratorServiceSyncResultClass;

GType curator_service_sync_result_get_type (void);
#define TYPE_CURATOR_SERVICE_SYNC_RESULT (curator_service_sync_result_get_type())
#define CURATOR_SERVICE_SYNC_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CURATOR_SERVICE_SYNC_RESULT, CuratorServiceSyncResult))
#define CURATOR_SERVICE_SYNC_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CURATOR_SERVICE_SYNC_RESULT, CuratorServiceSyncResultClass))
#define IS_CURATOR_SERVICE_SYNC_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CURATOR_SERVICE_SYNC_RESULT))
#define IS_CURATOR_SERVICE_SYNC_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CURATOR_SERVICE_SYNC_RESULT))
#define CURATOR_SERVICE_SYNC_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CURATOR_SERVICE_SYNC_RESULT, CuratorServiceSyncResultClass))

/* struct EventServiceGetNextEventArgs */
struct _EventServiceGetNextEventArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
};
typedef struct _EventServiceGetNextEventArgs EventServiceGetNextEventArgs;

struct _EventServiceGetNextEventArgsClass
{
  ThriftStructClass parent;
};
typedef struct _EventServiceGetNextEventArgsClass EventServiceGetNextEventArgsClass;

GType event_service_get_next_event_args_get_type (void);
#define TYPE_EVENT_SERVICE_GET_NEXT_EVENT_ARGS (event_service_get_next_event_args_get_type())
#define EVENT_SERVICE_GET_NEXT_EVENT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_ARGS, EventServiceGetNextEventArgs))
#define EVENT_SERVICE_GET_NEXT_EVENT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_EVENT_SERVICE_GET_NEXT_EVENT_ARGS, EventServiceGetNextEventArgsClass))
#define IS_EVENT_SERVICE_GET_NEXT_EVENT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_ARGS))
#define IS_EVENT_SERVICE_GET_NEXT_EVENT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_ARGS))
#define EVENT_SERVICE_GET_NEXT_EVENT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_ARGS, EventServiceGetNextEventArgsClass))

/* struct EventServiceGetNextEventResult */
struct _EventServiceGetNextEventResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorEvent * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _EventServiceGetNextEventResult EventServiceGetNextEventResult;

struct _EventServiceGetNextEventResultClass
{
  ThriftStructClass parent;
};
typedef struct _EventServiceGetNextEventResultClass EventServiceGetNextEventResultClass;

GType event_service_get_next_event_result_get_type (void);
#define TYPE_EVENT_SERVICE_GET_NEXT_EVENT_RESULT (event_service_get_next_event_result_get_type())
#define EVENT_SERVICE_GET_NEXT_EVENT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_RESULT, EventServiceGetNextEventResult))
#define EVENT_SERVICE_GET_NEXT_EVENT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_EVENT_SERVICE_GET_NEXT_EVENT_RESULT, EventServiceGetNextEventResultClass))
#define IS_EVENT_SERVICE_GET_NEXT_EVENT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_RESULT))
#define IS_EVENT_SERVICE_GET_NEXT_EVENT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_RESULT))
#define EVENT_SERVICE_GET_NEXT_EVENT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_EVENT_SERVICE_GET_NEXT_EVENT_RESULT, EventServiceGetNextEventResultClass))

/* struct DiscoveryServiceGetAllInstancesArgs */
struct _DiscoveryServiceGetAllInstancesArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProviderProjection * providerProjection;
  gboolean __isset_providerProjection;
};
typedef struct _DiscoveryServiceGetAllInstancesArgs DiscoveryServiceGetAllInstancesArgs;

struct _DiscoveryServiceGetAllInstancesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceGetAllInstancesArgsClass DiscoveryServiceGetAllInstancesArgsClass;

GType discovery_service_get_all_instances_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS (discovery_service_get_all_instances_args_get_type())
#define DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS, DiscoveryServiceGetAllInstancesArgs))
#define DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS, DiscoveryServiceGetAllInstancesArgsClass))
#define IS_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS))
#define IS_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS))
#define DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_ARGS, DiscoveryServiceGetAllInstancesArgsClass))

/* struct DiscoveryServiceGetAllInstancesResult */
struct _DiscoveryServiceGetAllInstancesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceGetAllInstancesResult DiscoveryServiceGetAllInstancesResult;

struct _DiscoveryServiceGetAllInstancesResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceGetAllInstancesResultClass DiscoveryServiceGetAllInstancesResultClass;

GType discovery_service_get_all_instances_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT (discovery_service_get_all_instances_result_get_type())
#define DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT, DiscoveryServiceGetAllInstancesResult))
#define DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT, DiscoveryServiceGetAllInstancesResultClass))
#define IS_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT))
#define IS_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT))
#define DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_GET_ALL_INSTANCES_RESULT, DiscoveryServiceGetAllInstancesResultClass))

/* struct DiscoveryServiceGetInstanceArgs */
struct _DiscoveryServiceGetInstanceArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProviderProjection * providerProjection;
  gboolean __isset_providerProjection;
};
typedef struct _DiscoveryServiceGetInstanceArgs DiscoveryServiceGetInstanceArgs;

struct _DiscoveryServiceGetInstanceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceGetInstanceArgsClass DiscoveryServiceGetInstanceArgsClass;

GType discovery_service_get_instance_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_GET_INSTANCE_ARGS (discovery_service_get_instance_args_get_type())
#define DISCOVERY_SERVICE_GET_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_ARGS, DiscoveryServiceGetInstanceArgs))
#define DISCOVERY_SERVICE_GET_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_GET_INSTANCE_ARGS, DiscoveryServiceGetInstanceArgsClass))
#define IS_DISCOVERY_SERVICE_GET_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_ARGS))
#define IS_DISCOVERY_SERVICE_GET_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_ARGS))
#define DISCOVERY_SERVICE_GET_INSTANCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_ARGS, DiscoveryServiceGetInstanceArgsClass))

/* struct DiscoveryServiceGetInstanceResult */
struct _DiscoveryServiceGetInstanceResult
{ 
  ThriftStruct parent; 

  /* public */
  DiscoveryInstance * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceGetInstanceResult DiscoveryServiceGetInstanceResult;

struct _DiscoveryServiceGetInstanceResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceGetInstanceResultClass DiscoveryServiceGetInstanceResultClass;

GType discovery_service_get_instance_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_GET_INSTANCE_RESULT (discovery_service_get_instance_result_get_type())
#define DISCOVERY_SERVICE_GET_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_RESULT, DiscoveryServiceGetInstanceResult))
#define DISCOVERY_SERVICE_GET_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_GET_INSTANCE_RESULT, DiscoveryServiceGetInstanceResultClass))
#define IS_DISCOVERY_SERVICE_GET_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_RESULT))
#define IS_DISCOVERY_SERVICE_GET_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_RESULT))
#define DISCOVERY_SERVICE_GET_INSTANCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_GET_INSTANCE_RESULT, DiscoveryServiceGetInstanceResultClass))

/* struct DiscoveryServiceMakeDiscoveryInstanceArgs */
struct _DiscoveryServiceMakeDiscoveryInstanceArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  GByteArray * payload;
  gboolean __isset_payload;
  gint32 port;
  gboolean __isset_port;
};
typedef struct _DiscoveryServiceMakeDiscoveryInstanceArgs DiscoveryServiceMakeDiscoveryInstanceArgs;

struct _DiscoveryServiceMakeDiscoveryInstanceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceMakeDiscoveryInstanceArgsClass DiscoveryServiceMakeDiscoveryInstanceArgsClass;

GType discovery_service_make_discovery_instance_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS (discovery_service_make_discovery_instance_args_get_type())
#define DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS, DiscoveryServiceMakeDiscoveryInstanceArgs))
#define DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS, DiscoveryServiceMakeDiscoveryInstanceArgsClass))
#define IS_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS))
#define IS_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS))
#define DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_ARGS, DiscoveryServiceMakeDiscoveryInstanceArgsClass))

/* struct DiscoveryServiceMakeDiscoveryInstanceResult */
struct _DiscoveryServiceMakeDiscoveryInstanceResult
{ 
  ThriftStruct parent; 

  /* public */
  DiscoveryInstance * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceMakeDiscoveryInstanceResult DiscoveryServiceMakeDiscoveryInstanceResult;

struct _DiscoveryServiceMakeDiscoveryInstanceResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceMakeDiscoveryInstanceResultClass DiscoveryServiceMakeDiscoveryInstanceResultClass;

GType discovery_service_make_discovery_instance_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT (discovery_service_make_discovery_instance_result_get_type())
#define DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT, DiscoveryServiceMakeDiscoveryInstanceResult))
#define DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT, DiscoveryServiceMakeDiscoveryInstanceResultClass))
#define IS_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT))
#define IS_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT))
#define DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_MAKE_DISCOVERY_INSTANCE_RESULT, DiscoveryServiceMakeDiscoveryInstanceResultClass))

/* struct DiscoveryServiceNoteErrorArgs */
struct _DiscoveryServiceNoteErrorArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProviderProjection * providerProjection;
  gboolean __isset_providerProjection;
  gchar * instanceId;
  gboolean __isset_instanceId;
};
typedef struct _DiscoveryServiceNoteErrorArgs DiscoveryServiceNoteErrorArgs;

struct _DiscoveryServiceNoteErrorArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceNoteErrorArgsClass DiscoveryServiceNoteErrorArgsClass;

GType discovery_service_note_error_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_NOTE_ERROR_ARGS (discovery_service_note_error_args_get_type())
#define DISCOVERY_SERVICE_NOTE_ERROR_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_ARGS, DiscoveryServiceNoteErrorArgs))
#define DISCOVERY_SERVICE_NOTE_ERROR_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_NOTE_ERROR_ARGS, DiscoveryServiceNoteErrorArgsClass))
#define IS_DISCOVERY_SERVICE_NOTE_ERROR_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_ARGS))
#define IS_DISCOVERY_SERVICE_NOTE_ERROR_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_ARGS))
#define DISCOVERY_SERVICE_NOTE_ERROR_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_ARGS, DiscoveryServiceNoteErrorArgsClass))

/* struct DiscoveryServiceNoteErrorResult */
struct _DiscoveryServiceNoteErrorResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceNoteErrorResult DiscoveryServiceNoteErrorResult;

struct _DiscoveryServiceNoteErrorResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceNoteErrorResultClass DiscoveryServiceNoteErrorResultClass;

GType discovery_service_note_error_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_NOTE_ERROR_RESULT (discovery_service_note_error_result_get_type())
#define DISCOVERY_SERVICE_NOTE_ERROR_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_RESULT, DiscoveryServiceNoteErrorResult))
#define DISCOVERY_SERVICE_NOTE_ERROR_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_NOTE_ERROR_RESULT, DiscoveryServiceNoteErrorResultClass))
#define IS_DISCOVERY_SERVICE_NOTE_ERROR_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_RESULT))
#define IS_DISCOVERY_SERVICE_NOTE_ERROR_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_RESULT))
#define DISCOVERY_SERVICE_NOTE_ERROR_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_NOTE_ERROR_RESULT, DiscoveryServiceNoteErrorResultClass))

/* struct DiscoveryServiceStartDiscoveryArgs */
struct _DiscoveryServiceStartDiscoveryArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  gchar * basePath;
  gboolean __isset_basePath;
  DiscoveryInstance * yourInstance;
  gboolean __isset_yourInstance;
};
typedef struct _DiscoveryServiceStartDiscoveryArgs DiscoveryServiceStartDiscoveryArgs;

struct _DiscoveryServiceStartDiscoveryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceStartDiscoveryArgsClass DiscoveryServiceStartDiscoveryArgsClass;

GType discovery_service_start_discovery_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_START_DISCOVERY_ARGS (discovery_service_start_discovery_args_get_type())
#define DISCOVERY_SERVICE_START_DISCOVERY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_ARGS, DiscoveryServiceStartDiscoveryArgs))
#define DISCOVERY_SERVICE_START_DISCOVERY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_START_DISCOVERY_ARGS, DiscoveryServiceStartDiscoveryArgsClass))
#define IS_DISCOVERY_SERVICE_START_DISCOVERY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_ARGS))
#define IS_DISCOVERY_SERVICE_START_DISCOVERY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_ARGS))
#define DISCOVERY_SERVICE_START_DISCOVERY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_ARGS, DiscoveryServiceStartDiscoveryArgsClass))

/* struct DiscoveryServiceStartDiscoveryResult */
struct _DiscoveryServiceStartDiscoveryResult
{ 
  ThriftStruct parent; 

  /* public */
  DiscoveryProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceStartDiscoveryResult DiscoveryServiceStartDiscoveryResult;

struct _DiscoveryServiceStartDiscoveryResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceStartDiscoveryResultClass DiscoveryServiceStartDiscoveryResultClass;

GType discovery_service_start_discovery_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_START_DISCOVERY_RESULT (discovery_service_start_discovery_result_get_type())
#define DISCOVERY_SERVICE_START_DISCOVERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_RESULT, DiscoveryServiceStartDiscoveryResult))
#define DISCOVERY_SERVICE_START_DISCOVERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_START_DISCOVERY_RESULT, DiscoveryServiceStartDiscoveryResultClass))
#define IS_DISCOVERY_SERVICE_START_DISCOVERY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_RESULT))
#define IS_DISCOVERY_SERVICE_START_DISCOVERY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_RESULT))
#define DISCOVERY_SERVICE_START_DISCOVERY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_START_DISCOVERY_RESULT, DiscoveryServiceStartDiscoveryResultClass))

/* struct DiscoveryServiceStartProviderArgs */
struct _DiscoveryServiceStartProviderArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
  gchar * serviceName;
  gboolean __isset_serviceName;
  ProviderStrategyType providerStrategy;
  gboolean __isset_providerStrategy;
  gint32 downTimeoutMs;
  gboolean __isset_downTimeoutMs;
  gint32 downErrorThreshold;
  gboolean __isset_downErrorThreshold;
};
typedef struct _DiscoveryServiceStartProviderArgs DiscoveryServiceStartProviderArgs;

struct _DiscoveryServiceStartProviderArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceStartProviderArgsClass DiscoveryServiceStartProviderArgsClass;

GType discovery_service_start_provider_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_START_PROVIDER_ARGS (discovery_service_start_provider_args_get_type())
#define DISCOVERY_SERVICE_START_PROVIDER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_START_PROVIDER_ARGS, DiscoveryServiceStartProviderArgs))
#define DISCOVERY_SERVICE_START_PROVIDER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_START_PROVIDER_ARGS, DiscoveryServiceStartProviderArgsClass))
#define IS_DISCOVERY_SERVICE_START_PROVIDER_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_START_PROVIDER_ARGS))
#define IS_DISCOVERY_SERVICE_START_PROVIDER_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_START_PROVIDER_ARGS))
#define DISCOVERY_SERVICE_START_PROVIDER_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_START_PROVIDER_ARGS, DiscoveryServiceStartProviderArgsClass))

/* struct DiscoveryServiceStartProviderResult */
struct _DiscoveryServiceStartProviderResult
{ 
  ThriftStruct parent; 

  /* public */
  DiscoveryProviderProjection * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceStartProviderResult DiscoveryServiceStartProviderResult;

struct _DiscoveryServiceStartProviderResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceStartProviderResultClass DiscoveryServiceStartProviderResultClass;

GType discovery_service_start_provider_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_START_PROVIDER_RESULT (discovery_service_start_provider_result_get_type())
#define DISCOVERY_SERVICE_START_PROVIDER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_START_PROVIDER_RESULT, DiscoveryServiceStartProviderResult))
#define DISCOVERY_SERVICE_START_PROVIDER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_START_PROVIDER_RESULT, DiscoveryServiceStartProviderResultClass))
#define IS_DISCOVERY_SERVICE_START_PROVIDER_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_START_PROVIDER_RESULT))
#define IS_DISCOVERY_SERVICE_START_PROVIDER_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_START_PROVIDER_RESULT))
#define DISCOVERY_SERVICE_START_PROVIDER_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_START_PROVIDER_RESULT, DiscoveryServiceStartProviderResultClass))

/* struct DiscoveryServiceLowLevelQueryForInstanceArgs */
struct _DiscoveryServiceLowLevelQueryForInstanceArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
  gchar * name;
  gboolean __isset_name;
  gchar * id;
  gboolean __isset_id;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstanceArgs DiscoveryServiceLowLevelQueryForInstanceArgs;

struct _DiscoveryServiceLowLevelQueryForInstanceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstanceArgsClass DiscoveryServiceLowLevelQueryForInstanceArgsClass;

GType discovery_service_low_level_query_for_instance_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS (discovery_service_low_level_query_for_instance_args_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS, DiscoveryServiceLowLevelQueryForInstanceArgs))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS, DiscoveryServiceLowLevelQueryForInstanceArgsClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_ARGS, DiscoveryServiceLowLevelQueryForInstanceArgsClass))

/* struct DiscoveryServiceLowLevelQueryForInstanceResult */
struct _DiscoveryServiceLowLevelQueryForInstanceResult
{ 
  ThriftStruct parent; 

  /* public */
  DiscoveryInstance * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstanceResult DiscoveryServiceLowLevelQueryForInstanceResult;

struct _DiscoveryServiceLowLevelQueryForInstanceResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstanceResultClass DiscoveryServiceLowLevelQueryForInstanceResultClass;

GType discovery_service_low_level_query_for_instance_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT (discovery_service_low_level_query_for_instance_result_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT, DiscoveryServiceLowLevelQueryForInstanceResult))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT, DiscoveryServiceLowLevelQueryForInstanceResultClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCE_RESULT, DiscoveryServiceLowLevelQueryForInstanceResultClass))

/* struct DiscoveryServiceLowLevelQueryForInstancesArgs */
struct _DiscoveryServiceLowLevelQueryForInstancesArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
  gchar * name;
  gboolean __isset_name;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstancesArgs DiscoveryServiceLowLevelQueryForInstancesArgs;

struct _DiscoveryServiceLowLevelQueryForInstancesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstancesArgsClass DiscoveryServiceLowLevelQueryForInstancesArgsClass;

GType discovery_service_low_level_query_for_instances_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS (discovery_service_low_level_query_for_instances_args_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS, DiscoveryServiceLowLevelQueryForInstancesArgs))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS, DiscoveryServiceLowLevelQueryForInstancesArgsClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_ARGS, DiscoveryServiceLowLevelQueryForInstancesArgsClass))

/* struct DiscoveryServiceLowLevelQueryForInstancesResult */
struct _DiscoveryServiceLowLevelQueryForInstancesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstancesResult DiscoveryServiceLowLevelQueryForInstancesResult;

struct _DiscoveryServiceLowLevelQueryForInstancesResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelQueryForInstancesResultClass DiscoveryServiceLowLevelQueryForInstancesResultClass;

GType discovery_service_low_level_query_for_instances_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT (discovery_service_low_level_query_for_instances_result_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT, DiscoveryServiceLowLevelQueryForInstancesResult))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT, DiscoveryServiceLowLevelQueryForInstancesResultClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_INSTANCES_RESULT, DiscoveryServiceLowLevelQueryForInstancesResultClass))

/* struct DiscoveryServiceLowLevelQueryForNamesArgs */
struct _DiscoveryServiceLowLevelQueryForNamesArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
};
typedef struct _DiscoveryServiceLowLevelQueryForNamesArgs DiscoveryServiceLowLevelQueryForNamesArgs;

struct _DiscoveryServiceLowLevelQueryForNamesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelQueryForNamesArgsClass DiscoveryServiceLowLevelQueryForNamesArgsClass;

GType discovery_service_low_level_query_for_names_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS (discovery_service_low_level_query_for_names_args_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS, DiscoveryServiceLowLevelQueryForNamesArgs))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS, DiscoveryServiceLowLevelQueryForNamesArgsClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_ARGS, DiscoveryServiceLowLevelQueryForNamesArgsClass))

/* struct DiscoveryServiceLowLevelQueryForNamesResult */
struct _DiscoveryServiceLowLevelQueryForNamesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceLowLevelQueryForNamesResult DiscoveryServiceLowLevelQueryForNamesResult;

struct _DiscoveryServiceLowLevelQueryForNamesResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelQueryForNamesResultClass DiscoveryServiceLowLevelQueryForNamesResultClass;

GType discovery_service_low_level_query_for_names_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT (discovery_service_low_level_query_for_names_result_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT, DiscoveryServiceLowLevelQueryForNamesResult))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT, DiscoveryServiceLowLevelQueryForNamesResultClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT))
#define DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_QUERY_FOR_NAMES_RESULT, DiscoveryServiceLowLevelQueryForNamesResultClass))

/* struct DiscoveryServiceLowLevelRegisterInstanceArgs */
struct _DiscoveryServiceLowLevelRegisterInstanceArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
  DiscoveryInstance * instance;
  gboolean __isset_instance;
};
typedef struct _DiscoveryServiceLowLevelRegisterInstanceArgs DiscoveryServiceLowLevelRegisterInstanceArgs;

struct _DiscoveryServiceLowLevelRegisterInstanceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelRegisterInstanceArgsClass DiscoveryServiceLowLevelRegisterInstanceArgsClass;

GType discovery_service_low_level_register_instance_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS (discovery_service_low_level_register_instance_args_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS, DiscoveryServiceLowLevelRegisterInstanceArgs))
#define DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS, DiscoveryServiceLowLevelRegisterInstanceArgsClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS))
#define DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_ARGS, DiscoveryServiceLowLevelRegisterInstanceArgsClass))

/* struct DiscoveryServiceLowLevelRegisterInstanceResult */
struct _DiscoveryServiceLowLevelRegisterInstanceResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceLowLevelRegisterInstanceResult DiscoveryServiceLowLevelRegisterInstanceResult;

struct _DiscoveryServiceLowLevelRegisterInstanceResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelRegisterInstanceResultClass DiscoveryServiceLowLevelRegisterInstanceResultClass;

GType discovery_service_low_level_register_instance_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT (discovery_service_low_level_register_instance_result_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT, DiscoveryServiceLowLevelRegisterInstanceResult))
#define DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT, DiscoveryServiceLowLevelRegisterInstanceResultClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT))
#define DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_REGISTER_INSTANCE_RESULT, DiscoveryServiceLowLevelRegisterInstanceResultClass))

/* struct DiscoveryServiceLowLevelUnregisterInstanceArgs */
struct _DiscoveryServiceLowLevelUnregisterInstanceArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
  DiscoveryInstance * instance;
  gboolean __isset_instance;
};
typedef struct _DiscoveryServiceLowLevelUnregisterInstanceArgs DiscoveryServiceLowLevelUnregisterInstanceArgs;

struct _DiscoveryServiceLowLevelUnregisterInstanceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelUnregisterInstanceArgsClass DiscoveryServiceLowLevelUnregisterInstanceArgsClass;

GType discovery_service_low_level_unregister_instance_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS (discovery_service_low_level_unregister_instance_args_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS, DiscoveryServiceLowLevelUnregisterInstanceArgs))
#define DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS, DiscoveryServiceLowLevelUnregisterInstanceArgsClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS))
#define DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_ARGS, DiscoveryServiceLowLevelUnregisterInstanceArgsClass))

/* struct DiscoveryServiceLowLevelUnregisterInstanceResult */
struct _DiscoveryServiceLowLevelUnregisterInstanceResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceLowLevelUnregisterInstanceResult DiscoveryServiceLowLevelUnregisterInstanceResult;

struct _DiscoveryServiceLowLevelUnregisterInstanceResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelUnregisterInstanceResultClass DiscoveryServiceLowLevelUnregisterInstanceResultClass;

GType discovery_service_low_level_unregister_instance_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT (discovery_service_low_level_unregister_instance_result_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT, DiscoveryServiceLowLevelUnregisterInstanceResult))
#define DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT, DiscoveryServiceLowLevelUnregisterInstanceResultClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT))
#define DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UNREGISTER_INSTANCE_RESULT, DiscoveryServiceLowLevelUnregisterInstanceResultClass))

/* struct DiscoveryServiceLowLevelUpdateInstanceArgs */
struct _DiscoveryServiceLowLevelUpdateInstanceArgs
{ 
  ThriftStruct parent; 

  /* public */
  CuratorProjection * projection;
  gboolean __isset_projection;
  DiscoveryProjection * discoveryProjection;
  gboolean __isset_discoveryProjection;
  DiscoveryInstance * instance;
  gboolean __isset_instance;
};
typedef struct _DiscoveryServiceLowLevelUpdateInstanceArgs DiscoveryServiceLowLevelUpdateInstanceArgs;

struct _DiscoveryServiceLowLevelUpdateInstanceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelUpdateInstanceArgsClass DiscoveryServiceLowLevelUpdateInstanceArgsClass;

GType discovery_service_low_level_update_instance_args_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS (discovery_service_low_level_update_instance_args_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS, DiscoveryServiceLowLevelUpdateInstanceArgs))
#define DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS, DiscoveryServiceLowLevelUpdateInstanceArgsClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS))
#define DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_ARGS, DiscoveryServiceLowLevelUpdateInstanceArgsClass))

/* struct DiscoveryServiceLowLevelUpdateInstanceResult */
struct _DiscoveryServiceLowLevelUpdateInstanceResult
{ 
  ThriftStruct parent; 

  /* public */
  CuratorException * ex1;
  gboolean __isset_ex1;
};
typedef struct _DiscoveryServiceLowLevelUpdateInstanceResult DiscoveryServiceLowLevelUpdateInstanceResult;

struct _DiscoveryServiceLowLevelUpdateInstanceResultClass
{
  ThriftStructClass parent;
};
typedef struct _DiscoveryServiceLowLevelUpdateInstanceResultClass DiscoveryServiceLowLevelUpdateInstanceResultClass;

GType discovery_service_low_level_update_instance_result_get_type (void);
#define TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT (discovery_service_low_level_update_instance_result_get_type())
#define DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT, DiscoveryServiceLowLevelUpdateInstanceResult))
#define DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT, DiscoveryServiceLowLevelUpdateInstanceResultClass))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT))
#define IS_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT))
#define DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_DISCOVERY_SERVICE_LOW_LEVEL_UPDATE_INSTANCE_RESULT, DiscoveryServiceLowLevelUpdateInstanceResultClass))

#endif /* CURATOR_TYPES_H */
